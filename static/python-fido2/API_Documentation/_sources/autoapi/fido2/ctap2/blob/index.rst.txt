fido2.ctap2.blob
================

.. py:module:: fido2.ctap2.blob


Classes
-------

.. autoapisummary::

   fido2.ctap2.blob.LargeBlobs


Module Contents
---------------

.. py:class:: LargeBlobs(ctap, pin_uv_protocol = None, pin_uv_token = None)

   Implementation of the CTAP2.1 Large Blobs API.

   Getting a largeBlobKey for a credential is done via the LargeBlobKey extension.

   :param ctap: An instance of a CTAP2 object.
   :param pin_uv_protocol: An instance of a PinUvAuthProtocol.
   :param pin_uv_token: A valid PIN/UV Auth Token for the current CTAP session.


   .. py:method:: is_supported(info)
      :staticmethod:



   .. py:attribute:: ctap


   .. py:attribute:: max_fragment_length


   .. py:attribute:: pin_uv
      :value: None



   .. py:method:: read_blob_array()

      Gets the entire contents of the Large Blobs array.

      :return: The CBOR decoded list of Large Blobs.



   .. py:method:: write_blob_array(blob_array)

      Writes the entire Large Blobs array.

      :param blob_array: A list to write to the Authenticator.



   .. py:method:: get_blob(large_blob_key)

      Gets the Large Blob stored for a single credential.

      :param large_blob_key: The largeBlobKey for the credential, or None.
      :returns: The decrypted and deflated value stored for the credential.



   .. py:method:: put_blob(large_blob_key, data)

      Stores a Large Blob for a single credential.

      Any existing entries for the same credential will be replaced.

      :param large_blob_key: The largeBlobKey for the credential.
      :param data: The data to compress, encrypt and store.



   .. py:method:: delete_blob(large_blob_key)

      Deletes any Large Blob(s) stored for a single credential.

      :param large_blob_key: The largeBlobKey for the credential.



