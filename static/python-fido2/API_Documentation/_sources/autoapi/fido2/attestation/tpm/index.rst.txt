fido2.attestation.tpm
=====================

.. py:module:: fido2.attestation.tpm


Attributes
----------

.. autoapisummary::

   fido2.attestation.tpm.TPM_ALG_NULL
   fido2.attestation.tpm.OID_AIK_CERTIFICATE
   fido2.attestation.tpm.TPM_GENERATED_VALUE
   fido2.attestation.tpm.TPM_ST_ATTEST_CERTIFY


Classes
-------

.. autoapisummary::

   fido2.attestation.tpm.TpmRsaScheme
   fido2.attestation.tpm.TpmAlgAsym
   fido2.attestation.tpm.TpmAlgHash
   fido2.attestation.tpm.TpmsCertifyInfo
   fido2.attestation.tpm.TpmAttestationFormat
   fido2.attestation.tpm.TpmsRsaParms
   fido2.attestation.tpm.Tpm2bPublicKeyRsa
   fido2.attestation.tpm.TpmEccCurve
   fido2.attestation.tpm.TpmiAlgKdf
   fido2.attestation.tpm.TpmsEccParms
   fido2.attestation.tpm.TpmsEccPoint
   fido2.attestation.tpm.ATTRIBUTES
   fido2.attestation.tpm.TpmPublicFormat
   fido2.attestation.tpm.TpmAttestation


Module Contents
---------------

.. py:data:: TPM_ALG_NULL
   :value: 16


.. py:data:: OID_AIK_CERTIFICATE

.. py:class:: TpmRsaScheme

   Bases: :py:obj:`enum.IntEnum`


   Enum where members are also (and must be) ints


   .. py:attribute:: RSASSA
      :value: 20



   .. py:attribute:: RSAPSS
      :value: 22



   .. py:attribute:: OAEP
      :value: 23



   .. py:attribute:: RSAES
      :value: 21



.. py:class:: TpmAlgAsym

   Bases: :py:obj:`enum.IntEnum`


   Enum where members are also (and must be) ints


   .. py:attribute:: RSA
      :value: 1



   .. py:attribute:: ECC
      :value: 35



.. py:class:: TpmAlgHash

   Bases: :py:obj:`enum.IntEnum`


   Enum where members are also (and must be) ints


   .. py:attribute:: SHA1
      :value: 4



   .. py:attribute:: SHA256
      :value: 11



   .. py:attribute:: SHA384
      :value: 12



   .. py:attribute:: SHA512
      :value: 13



.. py:class:: TpmsCertifyInfo

   .. py:attribute:: name
      :type:  bytes


   .. py:attribute:: qualified_name
      :type:  bytes


.. py:data:: TPM_GENERATED_VALUE
   :value: b'\xffTCG'


.. py:data:: TPM_ST_ATTEST_CERTIFY
   :value: b'\x80\x17'


.. py:class:: TpmAttestationFormat

   the signature data is defined by [TPMv2-Part2] Section 10.12.8 (TPMS_ATTEST)
   as:
     TPM_GENERATED_VALUE (0xff544347 aka "ÿTCG")
     TPMI_ST_ATTEST - always TPM_ST_ATTEST_CERTIFY (0x8017)
       because signing procedure defines it should call TPM_Certify
       [TPMv2-Part3] Section 18.2
     TPM2B_NAME
       size (uint16)
       name (size long)
     TPM2B_DATA
       size (uint16)
       name (size long)
     TPMS_CLOCK_INFO
       clock (uint64)
       resetCount (uint32)
       restartCount (uint32)
       safe (byte) 1 yes, 0 no
     firmwareVersion uint64
     attested TPMS_CERTIFY_INFO (because TPM_ST_ATTEST_CERTIFY)
       name TPM2B_NAME
       qualified_name TPM2B_NAME
   See:
     https://www.trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-2-Structures-01.38.pdf
     https://www.trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-3-Commands-01.38.pdf


   .. py:attribute:: name
      :type:  bytes


   .. py:attribute:: data
      :type:  bytes


   .. py:attribute:: clock_info
      :type:  tuple[int, int, int, bool]


   .. py:attribute:: firmware_version
      :type:  int


   .. py:attribute:: attested
      :type:  TpmsCertifyInfo


   .. py:method:: parse(data)
      :classmethod:



.. py:class:: TpmsRsaParms

   Parse TPMS_RSA_PARMS struct

   See:
   https://www.trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-2-Structures-01.38.pdf
   section 12.2.3.5


   .. py:attribute:: symmetric
      :type:  int


   .. py:attribute:: scheme
      :type:  int


   .. py:attribute:: key_bits
      :type:  int


   .. py:attribute:: exponent
      :type:  int


   .. py:method:: parse(reader, attributes)
      :classmethod:



.. py:class:: Tpm2bPublicKeyRsa

   Bases: :py:obj:`bytes`


   bytes(iterable_of_ints) -> bytes
   bytes(string, encoding[, errors]) -> bytes
   bytes(bytes_or_buffer) -> immutable copy of bytes_or_buffer
   bytes(int) -> bytes object of size given by the parameter initialized with null bytes
   bytes() -> empty bytes object

   Construct an immutable array of bytes from:
     - an iterable yielding integers in range(256)
     - a text string encoded using the specified encoding
     - any object implementing the buffer API.
     - an integer


   .. py:method:: parse(reader)
      :classmethod:



.. py:class:: TpmEccCurve

   Bases: :py:obj:`enum.IntEnum`


   TPM_ECC_CURVE
   https://www.trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-2-Structures-01.38.pdf
   section 6.4


   .. py:attribute:: NONE
      :value: 0



   .. py:attribute:: NIST_P192
      :value: 1



   .. py:attribute:: NIST_P224
      :value: 2



   .. py:attribute:: NIST_P256
      :value: 3



   .. py:attribute:: NIST_P384
      :value: 4



   .. py:attribute:: NIST_P521
      :value: 5



   .. py:attribute:: BN_P256
      :value: 16



   .. py:attribute:: BN_P638
      :value: 17



   .. py:attribute:: SM2_P256
      :value: 32



   .. py:method:: to_curve()


.. py:class:: TpmiAlgKdf

   Bases: :py:obj:`enum.IntEnum`


   TPMI_ALG_KDF
   https://www.trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-2-Structures-01.38.pdf
   section 9.28


   .. py:attribute:: NULL
      :value: 16



   .. py:attribute:: KDF1_SP800_56A
      :value: 32



   .. py:attribute:: KDF2
      :value: 33



   .. py:attribute:: KDF1_SP800_108
      :value: 34



.. py:class:: TpmsEccParms

   .. py:attribute:: symmetric
      :type:  int


   .. py:attribute:: scheme
      :type:  int


   .. py:attribute:: curve_id
      :type:  TpmEccCurve


   .. py:attribute:: kdf
      :type:  TpmiAlgKdf


   .. py:method:: parse(reader)
      :classmethod:



.. py:class:: TpmsEccPoint

   TPMS_ECC_POINT
   https://www.trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-2-Structures-01.38.pdf
   Section 11.2.5.2


   .. py:attribute:: x
      :type:  bytes


   .. py:attribute:: y
      :type:  bytes


   .. py:method:: parse(reader)
      :classmethod:



.. py:class:: ATTRIBUTES

   Bases: :py:obj:`enum.IntEnum`


   Object attributes
   see section 8.3
     https://www.trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-2-Structures-01.38.pdf


   .. py:attribute:: FIXED_TPM
      :value: 2



   .. py:attribute:: ST_CLEAR
      :value: 4



   .. py:attribute:: FIXED_PARENT
      :value: 16



   .. py:attribute:: SENSITIVE_DATA_ORIGIN
      :value: 32



   .. py:attribute:: USER_WITH_AUTH
      :value: 64



   .. py:attribute:: ADMIN_WITH_POLICY
      :value: 128



   .. py:attribute:: NO_DA
      :value: 1024



   .. py:attribute:: ENCRYPTED_DUPLICATION
      :value: 2048



   .. py:attribute:: RESTRICTED
      :value: 65536



   .. py:attribute:: DECRYPT
      :value: 131072



   .. py:attribute:: SIGN_ENCRYPT
      :value: 262144



   .. py:attribute:: SHALL_BE_ZERO
      :value: 4294505225



.. py:class:: TpmPublicFormat

   the public area structure is defined by [TPMv2-Part2] Section 12.2.4
   (TPMT_PUBLIC)
   as:
     TPMI_ALG_PUBLIC - type
     TPMI_ALG_HASH - nameAlg
       or + to indicate TPM_ALG_NULL
     TPMA_OBJECT - objectAttributes
     TPM2B_DIGEST - authPolicy
     TPMU_PUBLIC_PARMS - type parameters
     TPMU_PUBLIC_ID - uniq
   See:
     https://www.trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-2-Structures-01.38.pdf


   .. py:attribute:: sign_alg
      :type:  TpmAlgAsym


   .. py:attribute:: name_alg
      :type:  TpmAlgHash


   .. py:attribute:: attributes
      :type:  int


   .. py:attribute:: auth_policy
      :type:  bytes


   .. py:attribute:: parameters
      :type:  _Parameters


   .. py:attribute:: unique
      :type:  _Unique


   .. py:attribute:: data
      :type:  bytes


   .. py:method:: parse(data)
      :classmethod:



   .. py:method:: public_key()


   .. py:method:: name()

      Computing Entity Names

      see:
        https://www.trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-1-Architecture-01.38.pdf
      section 16 Names

      Name ≔ nameAlg || HnameAlg (handle→nvPublicArea)
        where
          nameAlg algorithm used to compute Name
          HnameAlg hash using the nameAlg parameter in the NV Index location
                   associated with handle
          nvPublicArea contents of the TPMS_NV_PUBLIC associated with handle



.. py:class:: TpmAttestation

   Bases: :py:obj:`fido2.attestation.base.Attestation`


   Implements verification of a specific attestation type.


   .. py:attribute:: FORMAT
      :value: 'tpm'



   .. py:method:: verify(statement, auth_data, client_data_hash)

      Verifies attestation statement.

      :return: An AttestationResult if successful.



