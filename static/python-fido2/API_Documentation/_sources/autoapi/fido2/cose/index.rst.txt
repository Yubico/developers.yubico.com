fido2.cose
==========

.. py:module:: fido2.cose


Attributes
----------

.. autoapisummary::

   fido2.cose.T_CoseKey


Classes
-------

.. autoapisummary::

   fido2.cose.CoseKey
   fido2.cose.UnsupportedKey
   fido2.cose.ES256
   fido2.cose.ESP256
   fido2.cose.ES384
   fido2.cose.ESP384
   fido2.cose.ES512
   fido2.cose.ESP512
   fido2.cose.RS256
   fido2.cose.PS256
   fido2.cose.EdDSA
   fido2.cose.Ed25519
   fido2.cose.Ed448
   fido2.cose.RS1
   fido2.cose.ES256K


Module Contents
---------------

.. py:class:: CoseKey

   Bases: :py:obj:`dict`


   A COSE formatted public key.

   :param _: The COSE key paramters.
   :cvar ALGORITHM: COSE algorithm identifier.


   .. py:attribute:: ALGORITHM
      :type:  int
      :value: None



   .. py:method:: verify(message, signature)
      :abstractmethod:


      Validates a digital signature over a given message.

      :param message: The message which was signed.
      :param signature: The signature to check.



   .. py:method:: from_cryptography_key(public_key)
      :classmethod:

      :abstractmethod:


      Converts a PublicKey object from Cryptography into a COSE key.

      :param public_key: Either an EC or RSA public key.
      :return: A CoseKey.



   .. py:method:: for_alg(alg)
      :staticmethod:


      Get a subclass of CoseKey corresponding to an algorithm identifier.

      :param alg: The COSE identifier of the algorithm.
      :return: A CoseKey.



   .. py:method:: for_name(name)
      :staticmethod:


      Get a subclass of CoseKey corresponding to an algorithm identifier.

      :param alg: The COSE identifier of the algorithm.
      :return: A CoseKey.



   .. py:method:: parse(cose)
      :staticmethod:


      Create a CoseKey from a dict



   .. py:method:: supported_algorithms()
      :staticmethod:


      Get a list of all supported algorithm identifiers



.. py:data:: T_CoseKey

.. py:class:: UnsupportedKey

   Bases: :py:obj:`CoseKey`


   A COSE key with an unsupported algorithm.


.. py:class:: ES256

   Bases: :py:obj:`CoseKey`


   A COSE formatted public key.

   :param _: The COSE key paramters.
   :cvar ALGORITHM: COSE algorithm identifier.


   .. py:attribute:: ALGORITHM
      :value: -7



   .. py:method:: verify(message, signature)

      Validates a digital signature over a given message.

      :param message: The message which was signed.
      :param signature: The signature to check.



   .. py:method:: from_cryptography_key(public_key)
      :classmethod:


      Converts a PublicKey object from Cryptography into a COSE key.

      :param public_key: Either an EC or RSA public key.
      :return: A CoseKey.



   .. py:method:: from_ctap1(data)
      :classmethod:


      Creates an ES256 key from a CTAP1 formatted public key byte string.

      :param data: A 65 byte SECP256R1 public key.
      :return: A ES256 key.



.. py:class:: ESP256

   Bases: :py:obj:`ES256`


   A COSE formatted public key.

   :param _: The COSE key paramters.
   :cvar ALGORITHM: COSE algorithm identifier.


   .. py:attribute:: ALGORITHM
      :value: -9



.. py:class:: ES384

   Bases: :py:obj:`CoseKey`


   A COSE formatted public key.

   :param _: The COSE key paramters.
   :cvar ALGORITHM: COSE algorithm identifier.


   .. py:attribute:: ALGORITHM
      :value: -35



   .. py:method:: verify(message, signature)

      Validates a digital signature over a given message.

      :param message: The message which was signed.
      :param signature: The signature to check.



   .. py:method:: from_cryptography_key(public_key)
      :classmethod:


      Converts a PublicKey object from Cryptography into a COSE key.

      :param public_key: Either an EC or RSA public key.
      :return: A CoseKey.



.. py:class:: ESP384

   Bases: :py:obj:`ES384`


   A COSE formatted public key.

   :param _: The COSE key paramters.
   :cvar ALGORITHM: COSE algorithm identifier.


   .. py:attribute:: ALGORITHM
      :value: -51



.. py:class:: ES512

   Bases: :py:obj:`CoseKey`


   A COSE formatted public key.

   :param _: The COSE key paramters.
   :cvar ALGORITHM: COSE algorithm identifier.


   .. py:attribute:: ALGORITHM
      :value: -36



   .. py:method:: verify(message, signature)

      Validates a digital signature over a given message.

      :param message: The message which was signed.
      :param signature: The signature to check.



   .. py:method:: from_cryptography_key(public_key)
      :classmethod:


      Converts a PublicKey object from Cryptography into a COSE key.

      :param public_key: Either an EC or RSA public key.
      :return: A CoseKey.



.. py:class:: ESP512

   Bases: :py:obj:`ES512`


   A COSE formatted public key.

   :param _: The COSE key paramters.
   :cvar ALGORITHM: COSE algorithm identifier.


   .. py:attribute:: ALGORITHM
      :value: -52



.. py:class:: RS256

   Bases: :py:obj:`CoseKey`


   A COSE formatted public key.

   :param _: The COSE key paramters.
   :cvar ALGORITHM: COSE algorithm identifier.


   .. py:attribute:: ALGORITHM
      :value: -257



   .. py:method:: verify(message, signature)

      Validates a digital signature over a given message.

      :param message: The message which was signed.
      :param signature: The signature to check.



   .. py:method:: from_cryptography_key(public_key)
      :classmethod:


      Converts a PublicKey object from Cryptography into a COSE key.

      :param public_key: Either an EC or RSA public key.
      :return: A CoseKey.



.. py:class:: PS256

   Bases: :py:obj:`CoseKey`


   A COSE formatted public key.

   :param _: The COSE key paramters.
   :cvar ALGORITHM: COSE algorithm identifier.


   .. py:attribute:: ALGORITHM
      :value: -37



   .. py:method:: verify(message, signature)

      Validates a digital signature over a given message.

      :param message: The message which was signed.
      :param signature: The signature to check.



   .. py:method:: from_cryptography_key(public_key)
      :classmethod:


      Converts a PublicKey object from Cryptography into a COSE key.

      :param public_key: Either an EC or RSA public key.
      :return: A CoseKey.



.. py:class:: EdDSA

   Bases: :py:obj:`CoseKey`


   A COSE formatted public key.

   :param _: The COSE key paramters.
   :cvar ALGORITHM: COSE algorithm identifier.


   .. py:attribute:: ALGORITHM
      :value: -8



   .. py:method:: verify(message, signature)

      Validates a digital signature over a given message.

      :param message: The message which was signed.
      :param signature: The signature to check.



   .. py:method:: from_cryptography_key(public_key)
      :classmethod:


      Converts a PublicKey object from Cryptography into a COSE key.

      :param public_key: Either an EC or RSA public key.
      :return: A CoseKey.



.. py:class:: Ed25519

   Bases: :py:obj:`EdDSA`


   A COSE formatted public key.

   :param _: The COSE key paramters.
   :cvar ALGORITHM: COSE algorithm identifier.


   .. py:attribute:: ALGORITHM
      :value: -19



.. py:class:: Ed448

   Bases: :py:obj:`CoseKey`


   A COSE formatted public key.

   :param _: The COSE key paramters.
   :cvar ALGORITHM: COSE algorithm identifier.


   .. py:attribute:: ALGORITHM
      :value: -53



   .. py:method:: verify(message, signature)

      Validates a digital signature over a given message.

      :param message: The message which was signed.
      :param signature: The signature to check.



   .. py:method:: from_cryptography_key(public_key)
      :classmethod:


      Converts a PublicKey object from Cryptography into a COSE key.

      :param public_key: Either an EC or RSA public key.
      :return: A CoseKey.



.. py:class:: RS1

   Bases: :py:obj:`CoseKey`


   A COSE formatted public key.

   :param _: The COSE key paramters.
   :cvar ALGORITHM: COSE algorithm identifier.


   .. py:attribute:: ALGORITHM
      :value: -65535



   .. py:method:: verify(message, signature)

      Validates a digital signature over a given message.

      :param message: The message which was signed.
      :param signature: The signature to check.



   .. py:method:: from_cryptography_key(public_key)
      :classmethod:


      Converts a PublicKey object from Cryptography into a COSE key.

      :param public_key: Either an EC or RSA public key.
      :return: A CoseKey.



.. py:class:: ES256K

   Bases: :py:obj:`CoseKey`


   A COSE formatted public key.

   :param _: The COSE key paramters.
   :cvar ALGORITHM: COSE algorithm identifier.


   .. py:attribute:: ALGORITHM
      :value: -47



   .. py:method:: verify(message, signature)

      Validates a digital signature over a given message.

      :param message: The message which was signed.
      :param signature: The signature to check.



   .. py:method:: from_cryptography_key(public_key)
      :classmethod:


      Converts a PublicKey object from Cryptography into a COSE key.

      :param public_key: Either an EC or RSA public key.
      :return: A CoseKey.



