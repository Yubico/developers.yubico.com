fido2.mds3
==========

.. py:module:: fido2.mds3


Attributes
----------

.. autoapisummary::

   fido2.mds3.EntryFilter
   fido2.mds3.LookupFilter


Classes
-------

.. autoapisummary::

   fido2.mds3.Version
   fido2.mds3.RogueListEntry
   fido2.mds3.BiometricStatusReport
   fido2.mds3.CodeAccuracyDescriptor
   fido2.mds3.BiometricAccuracyDescriptor
   fido2.mds3.PatternAccuracyDescriptor
   fido2.mds3.VerificationMethodDescriptor
   fido2.mds3.RgbPaletteEntry
   fido2.mds3.DisplayPngCharacteristicsDescriptor
   fido2.mds3.EcdaaTrustAnchor
   fido2.mds3.AuthenticatorStatus
   fido2.mds3.StatusReport
   fido2.mds3.ExtensionDescriptor
   fido2.mds3.MetadataStatement
   fido2.mds3.MetadataBlobPayloadEntry
   fido2.mds3.MetadataBlobPayload
   fido2.mds3.MdsAttestationVerifier


Functions
---------

.. autoapisummary::

   fido2.mds3.filter_revoked
   fido2.mds3.filter_attestation_key_compromised
   fido2.mds3.parse_blob


Module Contents
---------------

.. py:class:: Version

   Bases: :py:obj:`fido2.utils._JsonDataObject`


   A data class with members also accessible as a JSON-serializable Mapping.


   .. py:attribute:: major
      :type:  int


   .. py:attribute:: minor
      :type:  int


.. py:class:: RogueListEntry

   Bases: :py:obj:`fido2.utils._JsonDataObject`


   A data class with members also accessible as a JSON-serializable Mapping.


   .. py:attribute:: sk
      :type:  bytes


   .. py:attribute:: date
      :type:  int


.. py:class:: BiometricStatusReport

   Bases: :py:obj:`fido2.utils._JsonDataObject`


   A data class with members also accessible as a JSON-serializable Mapping.


   .. py:attribute:: cert_level
      :type:  int


   .. py:attribute:: modality
      :type:  str


   .. py:attribute:: effective_date
      :type:  int


   .. py:attribute:: certification_descriptor
      :type:  str


   .. py:attribute:: certificate_number
      :type:  str


   .. py:attribute:: certification_policy_version
      :type:  str


   .. py:attribute:: certification_requirements_version
      :type:  str


.. py:class:: CodeAccuracyDescriptor

   Bases: :py:obj:`fido2.utils._JsonDataObject`


   A data class with members also accessible as a JSON-serializable Mapping.


   .. py:attribute:: base
      :type:  int


   .. py:attribute:: min_length
      :type:  int


   .. py:attribute:: max_retries
      :type:  int | None
      :value: None



   .. py:attribute:: block_slowdown
      :type:  int | None
      :value: None



.. py:class:: BiometricAccuracyDescriptor

   Bases: :py:obj:`fido2.utils._JsonDataObject`


   A data class with members also accessible as a JSON-serializable Mapping.


   .. py:attribute:: self_attested_frr
      :type:  float | None
      :value: None



   .. py:attribute:: self_attested_far
      :type:  float | None
      :value: None



   .. py:attribute:: max_templates
      :type:  int | None
      :value: None



   .. py:attribute:: max_retries
      :type:  int | None
      :value: None



   .. py:attribute:: block_slowdown
      :type:  int | None
      :value: None



.. py:class:: PatternAccuracyDescriptor

   Bases: :py:obj:`fido2.utils._JsonDataObject`


   A data class with members also accessible as a JSON-serializable Mapping.


   .. py:attribute:: min_complexity
      :type:  int


   .. py:attribute:: max_retries
      :type:  int | None
      :value: None



   .. py:attribute:: block_slowdown
      :type:  int | None
      :value: None



.. py:class:: VerificationMethodDescriptor

   Bases: :py:obj:`fido2.utils._JsonDataObject`


   A data class with members also accessible as a JSON-serializable Mapping.


   .. py:attribute:: user_verification_method
      :type:  str | None
      :value: None



   .. py:attribute:: ca_desc
      :type:  CodeAccuracyDescriptor | None
      :value: None



   .. py:attribute:: ba_desc
      :type:  BiometricAccuracyDescriptor | None
      :value: None



   .. py:attribute:: pa_desc
      :type:  PatternAccuracyDescriptor | None
      :value: None



.. py:class:: RgbPaletteEntry

   Bases: :py:obj:`fido2.utils._JsonDataObject`


   A data class with members also accessible as a JSON-serializable Mapping.


   .. py:attribute:: r
      :type:  int


   .. py:attribute:: g
      :type:  int


   .. py:attribute:: b
      :type:  int


.. py:class:: DisplayPngCharacteristicsDescriptor

   Bases: :py:obj:`fido2.utils._JsonDataObject`


   A data class with members also accessible as a JSON-serializable Mapping.


   .. py:attribute:: width
      :type:  int


   .. py:attribute:: height
      :type:  int


   .. py:attribute:: bit_depth
      :type:  int


   .. py:attribute:: color_type
      :type:  int


   .. py:attribute:: compression
      :type:  int


   .. py:attribute:: filter
      :type:  int


   .. py:attribute:: interlace
      :type:  int


   .. py:attribute:: plte
      :type:  Sequence[RgbPaletteEntry] | None
      :value: None



.. py:class:: EcdaaTrustAnchor

   Bases: :py:obj:`fido2.utils._JsonDataObject`


   A data class with members also accessible as a JSON-serializable Mapping.


   .. py:attribute:: x
      :type:  str


   .. py:attribute:: y
      :type:  str


   .. py:attribute:: c
      :type:  str


   .. py:attribute:: sx
      :type:  str


   .. py:attribute:: sy
      :type:  str


   .. py:attribute:: g1_curve
      :type:  str


.. py:class:: AuthenticatorStatus

   Bases: :py:obj:`str`, :py:obj:`enum.Enum`


   Status of an Authenitcator.


   .. py:attribute:: NOT_FIDO_CERTIFIED
      :value: 'NOT_FIDO_CERTIFIED'



   .. py:attribute:: FIDO_CERTIFIED
      :value: 'FIDO_CERTIFIED'



   .. py:attribute:: USER_VERIFICATION_BYPASS
      :value: 'USER_VERIFICATION_BYPASS'



   .. py:attribute:: ATTESTATION_KEY_COMPROMISE
      :value: 'ATTESTATION_KEY_COMPROMISE'



   .. py:attribute:: USER_KEY_REMOTE_COMPROMISE
      :value: 'USER_KEY_REMOTE_COMPROMISE'



   .. py:attribute:: USER_KEY_PHYSICAL_COMPROMISE
      :value: 'USER_KEY_PHYSICAL_COMPROMISE'



   .. py:attribute:: UPDATE_AVAILABLE
      :value: 'UPDATE_AVAILABLE'



   .. py:attribute:: REVOKED
      :value: 'REVOKED'



   .. py:attribute:: SELF_ASSERTION_SUBMITTED
      :value: 'SELF_ASSERTION_SUBMITTED'



   .. py:attribute:: FIDO_CERTIFIED_L1
      :value: 'FIDO_CERTIFIED_L1'



   .. py:attribute:: FIDO_CERTIFIED_L1plus
      :value: 'FIDO_CERTIFIED_L1plus'



   .. py:attribute:: FIDO_CERTIFIED_L2
      :value: 'FIDO_CERTIFIED_L2'



   .. py:attribute:: FIDO_CERTIFIED_L2plus
      :value: 'FIDO_CERTIFIED_L2plus'



   .. py:attribute:: FIDO_CERTIFIED_L3
      :value: 'FIDO_CERTIFIED_L3'



   .. py:attribute:: FIDO_CERTIFIED_L3plus
      :value: 'FIDO_CERTIFIED_L3plus'



.. py:class:: StatusReport

   Bases: :py:obj:`fido2.utils._JsonDataObject`


   A data class with members also accessible as a JSON-serializable Mapping.


   .. py:attribute:: status
      :type:  AuthenticatorStatus


   .. py:attribute:: effective_date
      :type:  datetime.date | None
      :value: None



   .. py:attribute:: authenticator_version
      :type:  int | None
      :value: None



   .. py:attribute:: certificate
      :type:  bytes | None
      :value: None



   .. py:attribute:: url
      :type:  str | None
      :value: None



   .. py:attribute:: certification_descriptor
      :type:  str | None
      :value: None



   .. py:attribute:: certificate_number
      :type:  str | None
      :value: None



   .. py:attribute:: certification_policy_version
      :type:  str | None
      :value: None



   .. py:attribute:: certification_requirements_version
      :type:  str | None
      :value: None



.. py:class:: ExtensionDescriptor

   Bases: :py:obj:`fido2.utils._JsonDataObject`


   A data class with members also accessible as a JSON-serializable Mapping.


   .. py:attribute:: fail_if_unknown
      :type:  bool


   .. py:attribute:: id
      :type:  str


   .. py:attribute:: tag
      :type:  int | None
      :value: None



   .. py:attribute:: data
      :type:  str | None
      :value: None



.. py:class:: MetadataStatement

   Bases: :py:obj:`fido2.utils._JsonDataObject`


   A data class with members also accessible as a JSON-serializable Mapping.


   .. py:attribute:: description
      :type:  str


   .. py:attribute:: authenticator_version
      :type:  int


   .. py:attribute:: schema
      :type:  int


   .. py:attribute:: upv
      :type:  Sequence[Version]


   .. py:attribute:: attestation_types
      :type:  Sequence[str]


   .. py:attribute:: user_verification_details
      :type:  Sequence[Sequence[VerificationMethodDescriptor]]


   .. py:attribute:: key_protection
      :type:  Sequence[str]


   .. py:attribute:: matcher_protection
      :type:  Sequence[str]


   .. py:attribute:: attachment_hint
      :type:  Sequence[str]


   .. py:attribute:: tc_display
      :type:  Sequence[str]


   .. py:attribute:: attestation_root_certificates
      :type:  Sequence[bytes]


   .. py:attribute:: legal_header
      :type:  str | None
      :value: None



   .. py:attribute:: aaid
      :type:  str | None
      :value: None



   .. py:attribute:: aaguid
      :type:  fido2.webauthn.Aaguid | None
      :value: None



   .. py:attribute:: attestation_certificate_key_identifiers
      :type:  Sequence[bytes] | None
      :value: None



   .. py:attribute:: alternative_descriptions
      :type:  Mapping[str, str] | None
      :value: None



   .. py:attribute:: protocol_family
      :type:  str | None
      :value: None



   .. py:attribute:: authentication_algorithms
      :type:  Sequence[str] | None
      :value: None



   .. py:attribute:: public_key_alg_and_encodings
      :type:  Sequence[str] | None
      :value: None



   .. py:attribute:: is_key_restricted
      :type:  bool | None
      :value: None



   .. py:attribute:: is_fresh_user_verification_required
      :type:  bool | None
      :value: None



   .. py:attribute:: crypto_strength
      :type:  int | None
      :value: None



   .. py:attribute:: operating_env
      :type:  str | None
      :value: None



   .. py:attribute:: tc_display_content_type
      :type:  str | None
      :value: None



   .. py:attribute:: tc_display_png_characteristics
      :type:  Sequence[DisplayPngCharacteristicsDescriptor] | None
      :value: None



   .. py:attribute:: ecdaa_trust_anchors
      :type:  Sequence[EcdaaTrustAnchor] | None
      :value: None



   .. py:attribute:: icon
      :type:  str | None
      :value: None



   .. py:attribute:: supported_extensions
      :type:  Sequence[ExtensionDescriptor] | None
      :value: None



   .. py:attribute:: authenticator_get_info
      :type:  Mapping[str, Any] | None
      :value: None



.. py:class:: MetadataBlobPayloadEntry

   Bases: :py:obj:`fido2.utils._JsonDataObject`


   A data class with members also accessible as a JSON-serializable Mapping.


   .. py:attribute:: status_reports
      :type:  Sequence[StatusReport]


   .. py:attribute:: time_of_last_status_change
      :type:  datetime.date


   .. py:attribute:: aaid
      :type:  str | None
      :value: None



   .. py:attribute:: aaguid
      :type:  fido2.webauthn.Aaguid | None
      :value: None



   .. py:attribute:: attestation_certificate_key_identifiers
      :type:  Sequence[bytes] | None
      :value: None



   .. py:attribute:: metadata_statement
      :type:  MetadataStatement | None
      :value: None



   .. py:attribute:: biometric_status_reports
      :type:  Sequence[BiometricStatusReport] | None
      :value: None



   .. py:attribute:: rogue_list_url
      :type:  str | None
      :value: None



   .. py:attribute:: rogue_list_hash
      :type:  bytes | None
      :value: None



.. py:class:: MetadataBlobPayload

   Bases: :py:obj:`fido2.utils._JsonDataObject`


   A data class with members also accessible as a JSON-serializable Mapping.


   .. py:attribute:: legal_header
      :type:  str


   .. py:attribute:: no
      :type:  int


   .. py:attribute:: next_update
      :type:  datetime.date


   .. py:attribute:: entries
      :type:  Sequence[MetadataBlobPayloadEntry]


.. py:data:: EntryFilter

.. py:data:: LookupFilter

.. py:function:: filter_revoked(entry)

   Filters out any revoked metadata entry.

   This filter will remove any metadata entry which has a status_report with
   the REVOKED status.


.. py:function:: filter_attestation_key_compromised(entry, certificate_chain)

   Denies any attestation that has a compromised attestation key.

   This filter checks the status reports of a metadata entry and ensures the
   attestation isn't signed by a key which is marked as compromised.


.. py:class:: MdsAttestationVerifier(blob, entry_filter = filter_revoked, attestation_filter = filter_attestation_key_compromised, attestation_types = None)

   Bases: :py:obj:`fido2.attestation.AttestationVerifier`


   MDS3 implementation of an AttestationVerifier.

   The entry_filter is an optional predicate used to filter which metadata entries to
   include in the lookup for verification. By default, a filter that removes any
   entries that have a status report indicating the authenticator is REVOKED is used.
   See: filter_revoked

   The attestation_filter is an optional predicate used to filter metadata entries
   while performing attestation validation, and may take into account the
   Authenticators attestation trust_chain. By default, a filter that will fail any
   verification that has a trust_chain where one of the certificates is marked as
   compromised by the metadata statement is used.
   See: filter_attestation_key_compromised

   NOTE: The attestation_filter is not used when calling find_entry_by_aaguid nor
   find_entry_by_chain as no attestation is being verified!

   Setting either filter (including setting it to None) will replace it, removing
   the default behavior.

   :param blob: The MetadataBlobPayload to query for device metadata.
   :param entry_filter: An optional filter to exclude entries from lookup.
   :param attestation_filter: An optional filter to fail verification for a given
       attestation.
   :param attestation_types: A list of Attestation types to support.


   .. py:method:: find_entry_by_aaguid(aaguid)

      Find an entry by AAGUID.

      Returns a MetadataBlobPayloadEntry with a matching aaguid field, if found.
      This method does not take the attestation_filter into account.



   .. py:method:: find_entry_by_chain(certificate_chain)

      Find an entry by trust chain.

      Returns a MetadataBlobPayloadEntry containing an
      attestationCertificateKeyIdentifier which matches one of the certificates in the
      given chain, if found.
      This method does not take the attestation_filter into account.



   .. py:method:: ca_lookup(attestation_result, auth_data)

      Lookup a CA certificate to be used to verify a trust path.

      :param attestation_result: The result of the attestation
      :param auth_data: The AuthenticatorData from the registration



   .. py:method:: find_entry(attestation_object, client_data_hash)

      Lookup a Metadata entry based on an Attestation.

      Returns the first Metadata entry matching the given attestation and verifies it,
      including checking it against the attestation_filter.



.. py:function:: parse_blob(blob, trust_root)

   Parse a FIDO MDS3 blob and verifies its signature.

   See https://fidoalliance.org/metadata/ for details on obtaining the blob, as well as
   the CA certificate used to sign it.

   The resulting MetadataBlobPayload can be used to lookup metadata entries for
   specific Authenticators, or used with the MdsAttestationVerifier to verify that the
   attestation from a WebAuthn registration is valid and included in the metadata blob.

   NOTE: If trust_root is None, the signature of the blob will NOT be verified!


