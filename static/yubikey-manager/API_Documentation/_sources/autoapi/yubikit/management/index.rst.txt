yubikit.management
==================

.. py:module:: yubikit.management


Attributes
----------

.. autoapisummary::

   yubikit.management.TAG_USB_SUPPORTED
   yubikit.management.TAG_SERIAL
   yubikit.management.TAG_USB_ENABLED
   yubikit.management.TAG_FORM_FACTOR
   yubikit.management.TAG_VERSION
   yubikit.management.TAG_AUTO_EJECT_TIMEOUT
   yubikit.management.TAG_CHALRESP_TIMEOUT
   yubikit.management.TAG_DEVICE_FLAGS
   yubikit.management.TAG_APP_VERSIONS
   yubikit.management.TAG_CONFIG_LOCK
   yubikit.management.TAG_UNLOCK
   yubikit.management.TAG_REBOOT
   yubikit.management.TAG_NFC_SUPPORTED
   yubikit.management.TAG_NFC_ENABLED
   yubikit.management.TAG_IAP_DETECTION
   yubikit.management.TAG_MORE_DATA
   yubikit.management.TAG_FREE_FORM
   yubikit.management.TAG_HID_INIT_DELAY
   yubikit.management.TAG_PART_NUMBER
   yubikit.management.TAG_FIPS_CAPABLE
   yubikit.management.TAG_FIPS_APPROVED
   yubikit.management.TAG_PIN_COMPLEXITY
   yubikit.management.TAG_NFC_RESTRICTED
   yubikit.management.TAG_RESET_BLOCKED
   yubikit.management.TAG_VERSION_QUALIFIER
   yubikit.management.TAG_FPS_VERSION
   yubikit.management.TAG_STM_VERSION
   yubikit.management.SLOT_DEVICE_CONFIG
   yubikit.management.SLOT_YK4_CAPABILITIES
   yubikit.management.SLOT_YK4_SET_DEVICE_INFO
   yubikit.management.INS_SET_MODE
   yubikit.management.INS_READ_CONFIG
   yubikit.management.INS_WRITE_CONFIG
   yubikit.management.INS_DEVICE_RESET
   yubikit.management.P1_DEVICE_CONFIG
   yubikit.management.CTAP_VENDOR_FIRST
   yubikit.management.CTAP_YUBIKEY_DEVICE_CONFIG
   yubikit.management.CTAP_READ_CONFIG
   yubikit.management.CTAP_WRITE_CONFIG


Classes
-------

.. autoapisummary::

   yubikit.management.CAPABILITY
   yubikit.management.FORM_FACTOR
   yubikit.management.DEVICE_FLAG
   yubikit.management.RELEASE_TYPE
   yubikit.management.DeviceConfig
   yubikit.management.VersionQualifier
   yubikit.management.DeviceInfo
   yubikit.management.Mode
   yubikit.management.ManagementSession


Module Contents
---------------

.. py:class:: CAPABILITY

   Bases: :py:obj:`enum.IntFlag`


   YubiKey Application identifiers.


   .. py:attribute:: OTP
      :value: 1



   .. py:attribute:: U2F
      :value: 2



   .. py:attribute:: FIDO2
      :value: 512



   .. py:attribute:: OATH
      :value: 32



   .. py:attribute:: PIV
      :value: 16



   .. py:attribute:: OPENPGP
      :value: 8



   .. py:attribute:: HSMAUTH
      :value: 256



   .. py:method:: __str__()

      Return str(self).



   .. py:property:: display_name
      :type: str



   .. py:property:: usb_interfaces
      :type: yubikit.core.USB_INTERFACE



.. py:class:: FORM_FACTOR

   Bases: :py:obj:`enum.IntEnum`


   YubiKey device form factors.


   .. py:attribute:: UNKNOWN
      :value: 0



   .. py:attribute:: USB_A_KEYCHAIN
      :value: 1



   .. py:attribute:: USB_A_NANO
      :value: 2



   .. py:attribute:: USB_C_KEYCHAIN
      :value: 3



   .. py:attribute:: USB_C_NANO
      :value: 4



   .. py:attribute:: USB_C_LIGHTNING
      :value: 5



   .. py:attribute:: USB_A_BIO
      :value: 6



   .. py:attribute:: USB_C_BIO
      :value: 7



   .. py:method:: __str__()

      Return str(self).



   .. py:method:: from_code(code)
      :classmethod:



.. py:class:: DEVICE_FLAG

   Bases: :py:obj:`enum.IntFlag`


   Configuration flags.


   .. py:attribute:: REMOTE_WAKEUP
      :value: 64



   .. py:attribute:: EJECT
      :value: 128



.. py:class:: RELEASE_TYPE

   Bases: :py:obj:`enum.IntEnum`


   YubiKey release type.


   .. py:attribute:: ALPHA
      :value: 0



   .. py:attribute:: BETA
      :value: 1



   .. py:attribute:: FINAL
      :value: 2



   .. py:method:: __str__()

      Return str(self).



.. py:data:: TAG_USB_SUPPORTED
   :value: 1


.. py:data:: TAG_SERIAL
   :value: 2


.. py:data:: TAG_USB_ENABLED
   :value: 3


.. py:data:: TAG_FORM_FACTOR
   :value: 4


.. py:data:: TAG_VERSION
   :value: 5


.. py:data:: TAG_AUTO_EJECT_TIMEOUT
   :value: 6


.. py:data:: TAG_CHALRESP_TIMEOUT
   :value: 7


.. py:data:: TAG_DEVICE_FLAGS
   :value: 8


.. py:data:: TAG_APP_VERSIONS
   :value: 9


.. py:data:: TAG_CONFIG_LOCK
   :value: 10


.. py:data:: TAG_UNLOCK
   :value: 11


.. py:data:: TAG_REBOOT
   :value: 12


.. py:data:: TAG_NFC_SUPPORTED
   :value: 13


.. py:data:: TAG_NFC_ENABLED
   :value: 14


.. py:data:: TAG_IAP_DETECTION
   :value: 15


.. py:data:: TAG_MORE_DATA
   :value: 16


.. py:data:: TAG_FREE_FORM
   :value: 17


.. py:data:: TAG_HID_INIT_DELAY
   :value: 18


.. py:data:: TAG_PART_NUMBER
   :value: 19


.. py:data:: TAG_FIPS_CAPABLE
   :value: 20


.. py:data:: TAG_FIPS_APPROVED
   :value: 21


.. py:data:: TAG_PIN_COMPLEXITY
   :value: 22


.. py:data:: TAG_NFC_RESTRICTED
   :value: 23


.. py:data:: TAG_RESET_BLOCKED
   :value: 24


.. py:data:: TAG_VERSION_QUALIFIER
   :value: 25


.. py:data:: TAG_FPS_VERSION
   :value: 32


.. py:data:: TAG_STM_VERSION
   :value: 33


.. py:class:: DeviceConfig

   Management settings for YubiKey which can be configured by the user.


   .. py:attribute:: enabled_capabilities
      :type:  dict[yubikit.core.TRANSPORT, CAPABILITY]


   .. py:attribute:: auto_eject_timeout
      :type:  Optional[int]
      :value: None



   .. py:attribute:: challenge_response_timeout
      :type:  Optional[int]
      :value: None



   .. py:attribute:: device_flags
      :type:  Optional[DEVICE_FLAG]
      :value: None



   .. py:attribute:: nfc_restricted
      :type:  Optional[bool]
      :value: None



   .. py:method:: get_bytes(reboot, cur_lock_code = None, new_lock_code = None)


.. py:class:: VersionQualifier

   Fully qualified YubiKey version


   .. py:attribute:: version
      :type:  yubikit.core.Version


   .. py:attribute:: type
      :type:  RELEASE_TYPE


   .. py:attribute:: iteration
      :type:  int
      :value: 0



   .. py:method:: __str__()


.. py:class:: DeviceInfo

   Information about a YubiKey readable using the ManagementSession.


   .. py:attribute:: config
      :type:  DeviceConfig


   .. py:attribute:: serial
      :type:  Optional[int]


   .. py:attribute:: version
      :type:  yubikit.core.Version


   .. py:attribute:: form_factor
      :type:  FORM_FACTOR


   .. py:attribute:: supported_capabilities
      :type:  Mapping[yubikit.core.TRANSPORT, CAPABILITY]


   .. py:attribute:: is_locked
      :type:  bool


   .. py:attribute:: is_fips
      :type:  bool
      :value: False



   .. py:attribute:: is_sky
      :type:  bool
      :value: False



   .. py:attribute:: part_number
      :type:  Optional[str]
      :value: None



   .. py:attribute:: fips_capable
      :type:  CAPABILITY


   .. py:attribute:: fips_approved
      :type:  CAPABILITY


   .. py:attribute:: pin_complexity
      :type:  bool
      :value: False



   .. py:attribute:: reset_blocked
      :type:  CAPABILITY


   .. py:attribute:: fps_version
      :type:  Optional[yubikit.core.Version]
      :value: None



   .. py:attribute:: stm_version
      :type:  Optional[yubikit.core.Version]
      :value: None



   .. py:attribute:: version_qualifier
      :type:  VersionQualifier


   .. py:method:: has_transport(transport)


   .. py:property:: version_name
      :type: str


      The version of the YubiKey as a string.



   .. py:method:: parse(encoded, default_version)
      :classmethod:



   .. py:method:: parse_tlvs(data, default_version)
      :classmethod:



.. py:class:: Mode(interfaces)

   YubiKey USB Mode configuration for use with YubiKey NEO and 4.


   .. py:attribute:: code
      :type:  int


   .. py:attribute:: interfaces
      :type:  yubikit.core.USB_INTERFACE


   .. py:method:: __repr__()


   .. py:method:: from_code(code)
      :classmethod:



.. py:data:: SLOT_DEVICE_CONFIG
   :value: 17


.. py:data:: SLOT_YK4_CAPABILITIES
   :value: 19


.. py:data:: SLOT_YK4_SET_DEVICE_INFO
   :value: 21


.. py:data:: INS_SET_MODE
   :value: 22


.. py:data:: INS_READ_CONFIG
   :value: 29


.. py:data:: INS_WRITE_CONFIG
   :value: 28


.. py:data:: INS_DEVICE_RESET
   :value: 31


.. py:data:: P1_DEVICE_CONFIG
   :value: 17


.. py:data:: CTAP_VENDOR_FIRST
   :value: 64


.. py:data:: CTAP_YUBIKEY_DEVICE_CONFIG
   :value: 64


.. py:data:: CTAP_READ_CONFIG
   :value: 66


.. py:data:: CTAP_WRITE_CONFIG
   :value: 67


.. py:class:: ManagementSession(connection, scp_key_params = None)

   .. py:method:: close()

      Close the underlying connection.

      :deprecated: call .close() on the underlying connection instead.



   .. py:property:: version
      :type: yubikit.core.Version


      The firmware version of the YubiKey



   .. py:method:: read_device_info()

      Get detailed information about the YubiKey.



   .. py:method:: write_device_config(config = None, reboot = False, cur_lock_code = None, new_lock_code = None)

      Write configuration settings for YubiKey.

      :param config: The device configuration.
      :param reboot: If True the YubiKey will reboot.
      :param cur_lock_code: Current lock code.
      :param new_lock_code: New lock code.



   .. py:method:: set_mode(mode, chalresp_timeout = 0, auto_eject_timeout = None)

      Write connection modes (USB interfaces) for YubiKey.

      :param mode: The connection modes (USB interfaces).
      :param chalresp_timeout: The timeout when waiting for touch
          for challenge response.
      :param auto_eject_timeout: When set, the smartcard will
          automatically eject after the given time.



   .. py:method:: device_reset()

      Global factory reset.

      This is only available for YubiKey Bio, which has a PIN that is shared between
      applications. This will factory reset the global PIN as well as the associated
      applications.



