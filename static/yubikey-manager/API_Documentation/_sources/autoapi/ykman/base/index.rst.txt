ykman.base
==========

.. py:module:: ykman.base


Exceptions
----------

.. autoapisummary::

   ykman.base.CancelledException


Classes
-------

.. autoapisummary::

   ykman.base.REINSERT_STATUS
   ykman.base.YkmanDevice


Module Contents
---------------

.. py:class:: REINSERT_STATUS(*args, **kwds)

   Bases: :py:obj:`enum.Enum`


   Create a collection of name/value pairs.

   Example enumeration:

   >>> class Color(Enum):
   ...     RED = 1
   ...     BLUE = 2
   ...     GREEN = 3

   Access them by:

   - attribute access:

     >>> Color.RED
     <Color.RED: 1>

   - value lookup:

     >>> Color(1)
     <Color.RED: 1>

   - name lookup:

     >>> Color['RED']
     <Color.RED: 1>

   Enumerations can be iterated over, and know how many members they have:

   >>> len(Color)
   3

   >>> list(Color)
   [<Color.RED: 1>, <Color.BLUE: 2>, <Color.GREEN: 3>]

   Methods can be added to enumerations, and members can have their own
   attributes -- see the documentation for details.


   .. py:attribute:: REMOVE
      :value: 1



   .. py:attribute:: REINSERT
      :value: 2



.. py:exception:: CancelledException

   Bases: :py:obj:`Exception`


   Raised when the caller cancels an operation.


.. py:class:: YkmanDevice(transport, fingerprint, pid)

   Bases: :py:obj:`yubikit.core.YubiKeyDevice`


   YubiKey device reference, with optional PID


   .. py:property:: pid
      :type: yubikit.core.PID | None


      Return the PID of the YubiKey, if available.



   .. py:method:: reinsert(reinsert_cb = None, event = None)

      Wait for the user to remove and reinsert the YubiKey.

      This may be required to perform certain operations, such as FIDO reset.

      This method will attempt to verify that the same YubiKey is reinserted,
      but it will only fail when this is definitely not the case (eg. if the serial
      number does not match).

      :param reinsert_cb: Callback to indicate the the YubiKey has been removed,
      and should be reinserted.
      :param event: Optional event to cancel (throws CancelledException).



   .. py:method:: __repr__()


