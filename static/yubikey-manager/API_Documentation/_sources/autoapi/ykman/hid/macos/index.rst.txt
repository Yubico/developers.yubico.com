ykman.hid.macos
===============

.. py:module:: ykman.hid.macos


Attributes
----------

.. autoapisummary::

   ykman.hid.macos.HID_DEVICE_PROPERTY_VENDOR_ID
   ykman.hid.macos.HID_DEVICE_PROPERTY_PRODUCT_ID
   ykman.hid.macos.HID_DEVICE_PROPERTY_PRODUCT
   ykman.hid.macos.HID_DEVICE_PROPERTY_PRIMARY_USAGE
   ykman.hid.macos.HID_DEVICE_PROPERTY_PRIMARY_USAGE_PAGE
   ykman.hid.macos.HID_DEVICE_PROPERTY_MAX_INPUT_REPORT_SIZE
   ykman.hid.macos.HID_DEVICE_PROPERTY_MAX_OUTPUT_REPORT_SIZE
   ykman.hid.macos.HID_DEVICE_PROPERTY_REPORT_ID
   ykman.hid.macos.CF_SET_REF
   ykman.hid.macos.CF_STRING_REF
   ykman.hid.macos.CF_TYPE_REF
   ykman.hid.macos.CF_ALLOCATOR_REF
   ykman.hid.macos.CF_DICTIONARY_REF
   ykman.hid.macos.CF_MUTABLE_DICTIONARY_REF
   ykman.hid.macos.CF_TYPE_ID
   ykman.hid.macos.CF_INDEX
   ykman.hid.macos.CF_TIME_INTERVAL
   ykman.hid.macos.IO_RETURN
   ykman.hid.macos.IO_HID_REPORT_TYPE
   ykman.hid.macos.IO_OPTION_BITS
   ykman.hid.macos.IO_OBJECT_T
   ykman.hid.macos.MACH_PORT_T
   ykman.hid.macos.IO_SERVICE_T
   ykman.hid.macos.IO_REGISTRY_ENTRY_T
   ykman.hid.macos.IO_HID_MANAGER_REF
   ykman.hid.macos.IO_HID_DEVICE_REF
   ykman.hid.macos.K_CF_NUMBER_SINT32_TYPE
   ykman.hid.macos.K_CF_ALLOCATOR_DEFAULT
   ykman.hid.macos.K_IO_MASTER_PORT_DEFAULT
   ykman.hid.macos.K_IO_HID_REPORT_TYPE_FEATURE
   ykman.hid.macos.K_IO_RETURN_SUCCESS
   ykman.hid.macos.iokit
   ykman.hid.macos.cf


Classes
-------

.. autoapisummary::

   ykman.hid.macos.MacHidOtpConnection


Functions
---------

.. autoapisummary::

   ykman.hid.macos.get_int_property
   ykman.hid.macos.get_device_id
   ykman.hid.macos.list_devices


Module Contents
---------------

.. py:data:: HID_DEVICE_PROPERTY_VENDOR_ID
   :value: b'VendorID'


.. py:data:: HID_DEVICE_PROPERTY_PRODUCT_ID
   :value: b'ProductID'


.. py:data:: HID_DEVICE_PROPERTY_PRODUCT
   :value: b'Product'


.. py:data:: HID_DEVICE_PROPERTY_PRIMARY_USAGE
   :value: b'PrimaryUsage'


.. py:data:: HID_DEVICE_PROPERTY_PRIMARY_USAGE_PAGE
   :value: b'PrimaryUsagePage'


.. py:data:: HID_DEVICE_PROPERTY_MAX_INPUT_REPORT_SIZE
   :value: b'MaxInputReportSize'


.. py:data:: HID_DEVICE_PROPERTY_MAX_OUTPUT_REPORT_SIZE
   :value: b'MaxOutputReportSize'


.. py:data:: HID_DEVICE_PROPERTY_REPORT_ID
   :value: b'ReportID'


.. py:data:: CF_SET_REF

.. py:data:: CF_STRING_REF

.. py:data:: CF_TYPE_REF

.. py:data:: CF_ALLOCATOR_REF

.. py:data:: CF_DICTIONARY_REF

.. py:data:: CF_MUTABLE_DICTIONARY_REF

.. py:data:: CF_TYPE_ID

.. py:data:: CF_INDEX

.. py:data:: CF_TIME_INTERVAL

.. py:data:: IO_RETURN

.. py:data:: IO_HID_REPORT_TYPE

.. py:data:: IO_OPTION_BITS

.. py:data:: IO_OBJECT_T

.. py:data:: MACH_PORT_T

.. py:data:: IO_SERVICE_T

.. py:data:: IO_REGISTRY_ENTRY_T

.. py:data:: IO_HID_MANAGER_REF

.. py:data:: IO_HID_DEVICE_REF

.. py:data:: K_CF_NUMBER_SINT32_TYPE
   :value: 3


.. py:data:: K_CF_ALLOCATOR_DEFAULT
   :value: None


.. py:data:: K_IO_MASTER_PORT_DEFAULT
   :value: 0


.. py:data:: K_IO_HID_REPORT_TYPE_FEATURE
   :value: 2


.. py:data:: K_IO_RETURN_SUCCESS
   :value: 0


.. py:data:: iokit

.. py:data:: cf

.. py:class:: MacHidOtpConnection(path)

   Bases: :py:obj:`yubikit.core.otp.OtpConnection`


   A connection to a YubiKey


   .. py:attribute:: handle


   .. py:method:: close()

      Close the device, releasing any held resources.



   .. py:method:: receive()

      Reads an 8 byte feature report



   .. py:method:: send(data)

      Writes an 8 byte feature report



.. py:function:: get_int_property(dev, key)

   Reads int property from the HID device.


.. py:function:: get_device_id(device_handle)

   Obtains the unique IORegistry entry ID for the device.

   Args:
   device_handle: reference to the device

   Returns:
   A unique ID for the device, obtained from the IO Registry


.. py:function:: list_devices()

