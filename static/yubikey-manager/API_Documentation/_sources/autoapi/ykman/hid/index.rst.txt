ykman.hid
=========

.. py:module:: ykman.hid


Submodules
----------

.. toctree::
   :maxdepth: 1

   /autoapi/ykman/hid/base/index
   /autoapi/ykman/hid/freebsd/index
   /autoapi/ykman/hid/linux/index
   /autoapi/ykman/hid/macos/index
   /autoapi/ykman/hid/windows/index


Attributes
----------

.. autoapisummary::

   ykman.hid.list_otp_devices


Classes
-------

.. autoapisummary::

   ykman.hid.YkmanDevice
   ykman.hid.OtpYubiKeyDevice
   ykman.hid.backend
   ykman.hid.CtapYubiKeyDevice


Package Contents
----------------

.. py:class:: YkmanDevice(transport, fingerprint, pid)

   Bases: :py:obj:`yubikit.core.YubiKeyDevice`


   YubiKey device reference, with optional PID


   .. py:property:: pid
      :type: Optional[yubikit.core.PID]


      Return the PID of the YubiKey, if available.



   .. py:method:: __repr__()


.. py:class:: OtpYubiKeyDevice(path, pid, connection_cls)

   Bases: :py:obj:`ykman.base.YkmanDevice`


   YubiKey USB HID OTP device


   .. py:attribute:: path


   .. py:method:: supports_connection(connection_type)

      Check if a YubiKeyDevice supports a specific Connection type



   .. py:method:: open_connection(connection_type)

      Opens a connection to the YubiKey



.. py:class:: backend

   .. py:method:: list_devices()
      :staticmethod:

      :abstractmethod:



.. py:data:: list_otp_devices
   :type:  Callable[[], list[base.OtpYubiKeyDevice]]

.. py:class:: CtapYubiKeyDevice(descriptor)

   Bases: :py:obj:`ykman.base.YkmanDevice`


   YubiKey FIDO USB HID device


   .. py:attribute:: descriptor


   .. py:method:: supports_connection(connection_type)

      Check if a YubiKeyDevice supports a specific Connection type



   .. py:method:: open_connection(connection_type)

      Opens a connection to the YubiKey



