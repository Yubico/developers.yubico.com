ykman.pcsc
==========

.. py:module:: ykman.pcsc


Attributes
----------

.. autoapisummary::

   ykman.pcsc.YK_READER_NAME


Classes
-------

.. autoapisummary::

   ykman.pcsc.YkmanDevice
   ykman.pcsc.ScardSmartCardConnection
   ykman.pcsc.ScardYubiKeyDevice


Functions
---------

.. autoapisummary::

   ykman.pcsc.kill_scdaemon
   ykman.pcsc.kill_yubikey_agent
   ykman.pcsc.list_readers
   ykman.pcsc.list_devices


Package Contents
----------------

.. py:class:: YkmanDevice(transport, fingerprint, pid)

   Bases: :py:obj:`yubikit.core.YubiKeyDevice`


   YubiKey device reference, with optional PID


   .. py:property:: pid
      :type: Optional[yubikit.core.PID]


      Return the PID of the YubiKey, if available.



   .. py:method:: __repr__()


.. py:data:: YK_READER_NAME
   :value: 'yubico yubikey'


.. py:class:: ScardSmartCardConnection(connection)

   Bases: :py:obj:`yubikit.core.smartcard.SmartCardConnection`


   A connection to a YubiKey


   .. py:attribute:: connection


   .. py:property:: transport

      Get the transport type of the connection (USB or NFC)



   .. py:method:: close()

      Close the device, releasing any held resources.



   .. py:method:: send_and_receive(apdu)

      Sends a command APDU and returns the response data and sw



.. py:class:: ScardYubiKeyDevice(reader)

   Bases: :py:obj:`ykman.base.YkmanDevice`


   YubiKey Smart card device


   .. py:attribute:: reader


   .. py:method:: supports_connection(connection_type)

      Check if a YubiKeyDevice supports a specific Connection type



   .. py:method:: open_connection(connection_type)

      Opens a connection to the YubiKey



.. py:function:: kill_scdaemon()

.. py:function:: kill_yubikey_agent()

.. py:function:: list_readers()

.. py:function:: list_devices(name_filter=None)

