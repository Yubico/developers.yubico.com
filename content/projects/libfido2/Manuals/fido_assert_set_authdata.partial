<style>
    table.head, table.foot { width: 100%; }
    td.head-rtitle, td.foot-os { text-align: right; }
    td.head-vol { text-align: center; }
    div.Pp { margin: 1ex 0ex; }
    div.Nd, div.Bf, div.Op { display: inline; }
    span.Pa, span.Ad { font-style: italic; }
    span.Ms { font-weight: bold; }
    dl.Bl-diag > dt { font-weight: bold; }
    code.Nm, code.Fl, code.Cm, code.Ic, code.In, code.Fd, code.Fn,
    code.Cd { font-weight: bold; font-family: monospace; }
    var { font-family: monospace; }
    .Sh { font-size: 1.5em; padding-top: 1em; padding-bottom: 1em; }
</style>
<table class="head">
  <tr>
    <td class="head-ltitle">FIDO_ASSERT_SET_AUTHDATA(3)</td>
    <td class="head-vol">Library Functions Manual</td>
    <td class="head-rtitle">FIDO_ASSERT_SET_AUTHDATA(3)</td>
  </tr>
</table>
<div class="manual-text">
<h1 class="Sh" title="Sh" id="NAME"><a class="permalink" href="#NAME">NAME</a></h1>
<code class="Nm" title="Nm">fido_assert_set_authdata</code>,
  <code class="Nm" title="Nm">fido_assert_set_authdata_raw</code>,
  <code class="Nm" title="Nm">fido_assert_set_clientdata_hash</code>,
  <code class="Nm" title="Nm">fido_assert_set_count</code>,
  <code class="Nm" title="Nm">fido_assert_set_extensions</code>,
  <code class="Nm" title="Nm">fido_assert_set_hmac_salt</code>,
  <code class="Nm" title="Nm">fido_assert_set_up</code>,
  <code class="Nm" title="Nm">fido_assert_set_uv</code>,
  <code class="Nm" title="Nm">fido_assert_set_rp</code>,
  <code class="Nm" title="Nm">fido_assert_set_sig</code> &#x2014;
<div class="Nd" title="Nd">set parameters of a FIDO 2 assertion</div>
<h1 class="Sh" title="Sh" id="SYNOPSIS"><a class="permalink" href="#SYNOPSIS">SYNOPSIS</a></h1>
<code class="In" title="In">#include
  &lt;<a class="In" title="In">fido.h</a>&gt;</code>
<div class="Pp"></div>
<div class="Bd">
<pre class="Li">
typedef enum { 
	FIDO_OPT_OMIT = 0, /* use authenticator's default */ 
	FIDO_OPT_FALSE,    /* explicitly set option to false */ 
        FIDO_OPT_TRUE,     /* explicitly set option to true */ 
} fido_opt_t;
</pre>
</div>
<br/>
<var class="Ft" title="Ft">int</var>
<br/>
<code class="Fn" title="Fn">fido_assert_set_authdata</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">fido_assert_t
  *assert</var>, <var class="Fa" title="Fa" style="white-space: nowrap;"> size_t
  idx</var>, <var class="Fa" title="Fa" style="white-space: nowrap;">const
  unsigned char *ptr</var>,
  <var class="Fa" title="Fa" style="white-space: nowrap;">size_t len</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">int</var>
<br/>
<code class="Fn" title="Fn">fido_assert_set_authdata_raw</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">fido_assert_t
  *assert</var>, <var class="Fa" title="Fa" style="white-space: nowrap;"> size_t
  idx</var>, <var class="Fa" title="Fa" style="white-space: nowrap;">const
  unsigned char *ptr</var>,
  <var class="Fa" title="Fa" style="white-space: nowrap;">size_t len</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">int</var>
<br/>
<code class="Fn" title="Fn">fido_assert_set_clientdata_hash</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">fido_assert_t
  *assert</var>, <var class="Fa" title="Fa" style="white-space: nowrap;">const
  unsigned char *ptr</var>,
  <var class="Fa" title="Fa" style="white-space: nowrap;">size_t len</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">int</var>
<br/>
<code class="Fn" title="Fn">fido_assert_set_count</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">fido_assert_t
  *assert</var>, <var class="Fa" title="Fa" style="white-space: nowrap;">size_t
  n</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">int</var>
<br/>
<code class="Fn" title="Fn">fido_assert_set_extensions</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">fido_assert_t
  *assert</var>, <var class="Fa" title="Fa" style="white-space: nowrap;">int
  flags</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">int</var>
<br/>
<code class="Fn" title="Fn">fido_assert_set_hmac_salt</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">fido_assert_t
  *assert</var>, <var class="Fa" title="Fa" style="white-space: nowrap;">const
  unsigned char *ptr</var>,
  <var class="Fa" title="Fa" style="white-space: nowrap;">size_t len</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">int</var>
<br/>
<code class="Fn" title="Fn">fido_assert_set_up</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">fido_assert_t
  *assert</var>,
  <var class="Fa" title="Fa" style="white-space: nowrap;">fido_opt_t up</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">int</var>
<br/>
<code class="Fn" title="Fn">fido_assert_set_uv</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">fido_assert_t
  *assert</var>,
  <var class="Fa" title="Fa" style="white-space: nowrap;">fido_opt_t uv</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">int</var>
<br/>
<code class="Fn" title="Fn">fido_assert_set_rp</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">fido_assert_t
  *assert</var>, <var class="Fa" title="Fa" style="white-space: nowrap;">const
  char *id</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">int</var>
<br/>
<code class="Fn" title="Fn">fido_assert_set_sig</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">fido_assert_t
  *assert</var>, <var class="Fa" title="Fa" style="white-space: nowrap;">size_t
  idx</var>, <var class="Fa" title="Fa" style="white-space: nowrap;">const
  unsigned char *ptr</var>,
  <var class="Fa" title="Fa" style="white-space: nowrap;">size_t len</var>);
<h1 class="Sh" title="Sh" id="DESCRIPTION"><a class="permalink" href="#DESCRIPTION">DESCRIPTION</a></h1>
The <code class="Nm" title="Nm">fido_assert_set_authdata</code> set of functions
  define the various parameters of a FIDO 2 assertion, allowing a
  <var class="Fa" title="Fa">fido_assert_t</var> type to be prepared for a
  subsequent call to
  <a class="Xr" title="Xr" href="fido_dev_get_assert.html">fido_dev_get_assert(3)</a>
  or
  <a class="Xr" title="Xr" href="fido_assert_verify.html">fido_assert_verify(3)</a>.
  For the complete specification of a FIDO 2 assertion and the format of its
  constituent parts, please refer to the Web Authentication (webauthn) standard.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_assert_set_count</code>() function sets the
  number of assertion statements in <var class="Fa" title="Fa">assert</var> to
  <var class="Fa" title="Fa">n</var>.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_assert_set_authdata</code>() and
  <code class="Fn" title="Fn">fido_assert_set_sig</code>() functions set the
  authenticator data and signature parts of the statement with index
  <var class="Fa" title="Fa">idx</var> of
  <var class="Fa" title="Fa">assert</var> to
  <var class="Fa" title="Fa">ptr</var>, where
  <var class="Fa" title="Fa">ptr</var> points to
  <var class="Fa" title="Fa">len</var> bytes. A copy of
  <var class="Fa" title="Fa">ptr</var> is made, and no references to the passed
  pointer are kept. Please note that the first assertion statement of
  <var class="Fa" title="Fa">assert</var> has an
  <var class="Fa" title="Fa">idx</var> of <i class="Em" title="Em">0</i>. The
  authenticator data passed to
  <code class="Fn" title="Fn">fido_assert_set_authdata</code>() must be a
  CBOR-encoded byte string, as obtained from
  <code class="Fn" title="Fn">fido_assert_authdata_ptr</code>(). Alternatively,
  a raw binary blob may be passed to
  <code class="Fn" title="Fn">fido_assert_set_authdata_raw</code>().
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_assert_set_clientdata_hash</code>() and
  <code class="Fn" title="Fn">fido_assert_set_hmac_salt</code>() functions set
  the client data hash and hmac-salt parts of
  <var class="Fa" title="Fa">assert</var> to
  <var class="Fa" title="Fa">ptr</var>, where
  <var class="Fa" title="Fa">ptr</var> points to
  <var class="Fa" title="Fa">len</var> bytes. A copy of
  <var class="Fa" title="Fa">ptr</var> is made, and no references to the passed
  pointer are kept.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_assert_set_rp</code>() function sets the
  relying party <var class="Fa" title="Fa">id</var> of
  <var class="Fa" title="Fa">assert</var>, where
  <var class="Fa" title="Fa">id</var> is a NUL-terminated UTF-8 string. The
  content of <var class="Fa" title="Fa">id</var> is copied, and no references to
  the passed pointer are kept.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_assert_set_extensions</code>() function
  sets the extensions of <var class="Fa" title="Fa">assert</var> to the bitmask
  <var class="Fa" title="Fa">flags</var>. At the moment, only the
  <code class="Dv" title="Dv">FIDO_EXT_HMAC_SECRET</code> extension is
  supported. If <var class="Fa" title="Fa">flags</var> is zero, the extensions
  of <var class="Fa" title="Fa">assert</var> are cleared.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_assert_set_up</code>() and
  <code class="Fn" title="Fn">fido_assert_set_uv</code>() functions set the
  <var class="Fa" title="Fa">up</var> (user presence) and
  <var class="Fa" title="Fa">uv</var> (user verification) attributes of
  <var class="Fa" title="Fa">assert</var>. Both are
  <code class="Dv" title="Dv">FIDO_OPT_OMIT</code> by default, allowing the
  authenticator to use its default settings.
<div class="Pp"></div>
Use of the <code class="Nm" title="Nm">fido_assert_set_authdata</code> set of
  functions may happen in two distinct situations: when asking a FIDO device to
  produce a series of assertion statements, prior to
  <a class="Xr" title="Xr" href="fido_dev_get_assert.html">fido_dev_get_assert(3)</a>
  (i.e, in the context of a FIDO client), or when verifying assertion statements
  using
  <a class="Xr" title="Xr" href="fido_assert_verify.html">fido_assert_verify(3)</a>
  (i.e, in the context of a FIDO server).
<div class="Pp"></div>
For a complete description of the generation of a FIDO 2 assertion and its
  verification, please refer to the FIDO 2 specification. An example of how to
  use the <code class="Nm" title="Nm">fido_assert_set_authdata</code> set of
  functions can be found in the
  <span class="Pa" title="Pa">examples/assert.c</span> file shipped with
  <i class="Em" title="Em">libfido2</i>.
<h1 class="Sh" title="Sh" id="RETURN_VALUES"><a class="permalink" href="#RETURN_VALUES">RETURN
  VALUES</a></h1>
The <code class="Nm" title="Nm">fido_assert_set_authdata</code> functions return
  <code class="Dv" title="Dv">FIDO_OK</code> on success. The error codes
  returned by the <code class="Nm" title="Nm">fido_assert_set_authdata</code>
  set of functions are defined in
  <code class="In" title="In">&lt;<a class="In" title="In">fido/err.h</a>&gt;</code>.
<h1 class="Sh" title="Sh" id="SEE_ALSO"><a class="permalink" href="#SEE_ALSO">SEE
  ALSO</a></h1>
<a class="Xr" title="Xr" href="fido_assert_allow_cred.html">fido_assert_allow_cred(3)</a>,
  <a class="Xr" title="Xr" href="fido_assert_verify.html">fido_assert_verify(3)</a>,
  <a class="Xr" title="Xr" href="fido_dev_get_assert.html">fido_dev_get_assert(3)</a></div>
<table class="foot">
  <tr>
    <td class="foot-date">May 23, 2018</td>
    <td class="foot-os">Linux 5.3.12-arch1-1</td>
  </tr>
</table>
