<style>
    table.head, table.foot { width: 100%; }
    td.head-rtitle, td.foot-os { text-align: right; }
    td.head-vol { text-align: center; }
    div.Pp { margin: 1ex 0ex; }
    div.Nd, div.Bf, div.Op { display: inline; }
    span.Pa, span.Ad { font-style: italic; }
    span.Ms { font-weight: bold; }
    dl.Bl-diag > dt { font-weight: bold; }
    code.Nm, code.Fl, code.Cm, code.Ic, code.In, code.Fd, code.Fn,
    code.Cd { font-weight: bold; font-family: monospace; }
    var { font-family: monospace; }
    .Sh { font-size: 1.5em; padding-top: 1em; padding-bottom: 1em; }
</style>
<table class="head">
  <tr>
    <td class="head-ltitle">FIDO_CREDMAN_METADATA_NEW(3)</td>
    <td class="head-vol">Library Functions Manual</td>
    <td class="head-rtitle">FIDO_CREDMAN_METADATA_NEW(3)</td>
  </tr>
</table>
<div class="manual-text">
<h1 class="Sh" title="Sh" id="NAME"><a class="permalink" href="#NAME">NAME</a></h1>
<code class="Nm" title="Nm">fido_credman_metadata_new</code>,
  <code class="Nm" title="Nm">fido_credman_rk_new</code>,
  <code class="Nm" title="Nm">fido_credman_rp_new</code>,
  <code class="Nm" title="Nm">fido_credman_metadata_free</code>,
  <code class="Nm" title="Nm">fido_credman_rk_free</code>,
  <code class="Nm" title="Nm">fido_credman_rp_free</code>,
  <code class="Nm" title="Nm">fido_credman_rk_existing</code>,
  <code class="Nm" title="Nm">fido_credman_rk_remaining</code>,
  <code class="Nm" title="Nm">fido_credman_rk</code>,
  <code class="Nm" title="Nm">fido_credman_rk_count</code>,
  <code class="Nm" title="Nm">fido_credman_rp_id</code>,
  <code class="Nm" title="Nm">fido_credman_rp_name</code>,
  <code class="Nm" title="Nm">fido_credman_rp_count</code>,
  <code class="Nm" title="Nm">fido_credman_rp_id_hash_ptr</code>,
  <code class="Nm" title="Nm">fido_credman_rp_id_hash_len</code>,
  <code class="Nm" title="Nm">fido_credman_get_dev_metadata</code>,
  <code class="Nm" title="Nm">fido_credman_get_dev_rk</code>,
  <code class="Nm" title="Nm">fido_credman_del_dev_rk</code>,
  <code class="Nm" title="Nm">fido_credman_get_dev_rp</code> &#x2014;
<div class="Nd" title="Nd">FIDO 2 credential management API</div>
<h1 class="Sh" title="Sh" id="SYNOPSIS"><a class="permalink" href="#SYNOPSIS">SYNOPSIS</a></h1>
<code class="In" title="In">#include
  &lt;<a class="In" title="In">fido.h</a>&gt;</code>
<br/>
<code class="In" title="In">#include
  &lt;<a class="In" title="In">fido/credman.h</a>&gt;</code>
<div class="Pp"></div>
<var class="Ft" title="Ft">fido_credman_metadata_t *</var>
<br/>
<code class="Fn" title="Fn">fido_credman_metadata_new</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">void</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">fido_credman_rk_t *</var>
<br/>
<code class="Fn" title="Fn">fido_credman_rk_new</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">void</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">fido_credman_rp_t *</var>
<br/>
<code class="Fn" title="Fn">fido_credman_rp_new</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">void</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">void</var>
<br/>
<code class="Fn" title="Fn">fido_credman_metadata_free</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">fido_credman_metadata_t
  **metadata_p</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">void</var>
<br/>
<code class="Fn" title="Fn">fido_credman_rk_free</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">fido_credman_rk_t
  **rk_p</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">void</var>
<br/>
<code class="Fn" title="Fn">fido_credman_rp_free</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">fido_credman_rp_t
  **rp_p</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">uint64_t</var>
<br/>
<code class="Fn" title="Fn">fido_credman_rk_existing</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_credman_metadata_t *metadata</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">uint64_t</var>
<br/>
<code class="Fn" title="Fn">fido_credman_rk_remaining</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_credman_metadata_t *metadata</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">const fido_cred_t *</var>
<br/>
<code class="Fn" title="Fn">fido_credman_rk</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_credman_rk_t *rk</var>,
  <var class="Fa" title="Fa" style="white-space: nowrap;">size_t idx</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">size_t</var>
<br/>
<code class="Fn" title="Fn">fido_credman_rk_count</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_credman_rk_t *rk</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">const char *</var>
<br/>
<code class="Fn" title="Fn">fido_credman_rp_id</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_credman_rp_t *rp</var>,
  <var class="Fa" title="Fa" style="white-space: nowrap;">size_t idx</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">const char *</var>
<br/>
<code class="Fn" title="Fn">fido_credman_rp_name</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_credman_rp_t *rp</var>,
  <var class="Fa" title="Fa" style="white-space: nowrap;">size_t idx</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">size_t</var>
<br/>
<code class="Fn" title="Fn">fido_credman_rp_count</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_credman_rp_t *rp</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">const unsigned char *</var>
<br/>
<code class="Fn" title="Fn">fido_credman_rp_id_hash_ptr</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_credman_rp_t *rp</var>,
  <var class="Fa" title="Fa" style="white-space: nowrap;">size_t idx</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">size_t</var>
<br/>
<code class="Fn" title="Fn">fido_credman_rp_id_hash_len</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_credman_rp_t *</var>,
  <var class="Fa" title="Fa" style="white-space: nowrap;">size_t idx</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">int</var>
<br/>
<code class="Fn" title="Fn">fido_credman_get_dev_metadata</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">fido_dev_t
  *dev</var>,
  <var class="Fa" title="Fa" style="white-space: nowrap;">fido_credman_metadata_t
  *metadata</var>, <var class="Fa" title="Fa" style="white-space: nowrap;">const
  char *pin</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">int</var>
<br/>
<code class="Fn" title="Fn">fido_credman_get_dev_rk</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">fido_dev_t
  *dev</var>, <var class="Fa" title="Fa" style="white-space: nowrap;">const char
  *rp_id</var>,
  <var class="Fa" title="Fa" style="white-space: nowrap;">fido_credman_rk_t
  *rk</var>, <var class="Fa" title="Fa" style="white-space: nowrap;">const char
  *pin</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">int</var>
<br/>
<code class="Fn" title="Fn">fido_credman_del_dev_rk</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">fido_dev_t
  *dev</var>,
  <var class="Fa" title="Fa" style="white-space: nowrap;">const</var>,
  <var class="Fa" title="Fa" style="white-space: nowrap;">unsigned</var>,
  <var class="Fa" title="Fa" style="white-space: nowrap;">char</var>,
  <var class="Fa" title="Fa" style="white-space: nowrap;">*cred_id&quot;</var>,
  <var class="Fa" title="Fa" style="white-space: nowrap;">size_t
  cred_id_len</var>,
  <var class="Fa" title="Fa" style="white-space: nowrap;">const char
  *pin</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">int</var>
<br/>
<code class="Fn" title="Fn">fido_credman_get_dev_rp</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">fido_dev_t
  *dev</var>,
  <var class="Fa" title="Fa" style="white-space: nowrap;">fido_credman_rp_t
  *rp</var>, <var class="Fa" title="Fa" style="white-space: nowrap;">const char
  *pin</var>);
<h1 class="Sh" title="Sh" id="DESCRIPTION"><a class="permalink" href="#DESCRIPTION">DESCRIPTION</a></h1>
The credential management API of <i class="Em" title="Em">libfido2</i> allows
  resident credentials on a FIDO2 authenticator to be listed, inspected, and
  removed. Please note that not all FIDO2 authenticators support credential
  management. To obtain information on what an authenticator supports, please
  refer to
  <a class="Xr" title="Xr" href="fido_cbor_info_new.html">fido_cbor_info_new(3)</a>.
<div class="Pp"></div>
The <var class="Vt" title="Vt">fido_credman_metadata_t</var> type abstracts
  credential management metadata.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_credman_metadata_new</code>() function
  returns a pointer to a newly allocated, empty
  <var class="Vt" title="Vt">fido_credman_metadata_t</var> type. If memory
  cannot be allocated, NULL is returned.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_credman_metadata_free</code>() function
  releases the memory backing <var class="Fa" title="Fa">*metadata_p</var>,
  where <var class="Fa" title="Fa">*metadata_p</var> must have been previously
  allocated by <code class="Fn" title="Fn">fido_credman_metadata_new</code>().
  On return, <var class="Fa" title="Fa">*metadata_p</var> is set to NULL. Either
  <var class="Fa" title="Fa">metadata_p</var> or
  <var class="Fa" title="Fa">*metadata_p</var> may be NULL, in which case
  <code class="Fn" title="Fn">fido_credman_metadata_free</code>() is a NOP.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_credman_get_dev_metadata</code>() function
  populates <var class="Fa" title="Fa">metadata</var> with information retrieved
  from <var class="Fa" title="Fa">dev</var>. A valid
  <var class="Fa" title="Fa">pin</var> must be provided.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_credman_rk_existing</code>() function
  inspects <var class="Fa" title="Fa">metadata</var> and returns the number of
  resident credentials on the authenticator. The
  <code class="Fn" title="Fn">fido_credman_rk_remaining</code>() function
  inspects <var class="Fa" title="Fa">metadata</var> and returns the estimated
  number of resident credentials that can be created on the authenticator.
<div class="Pp"></div>
The <var class="Vt" title="Vt">fido_credman_rk_t</var> type abstracts the set of
  resident credentials belonging to a given relying party.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_credman_rk_new</code>() function returns a
  pointer to a newly allocated, empty
  <var class="Vt" title="Vt">fido_credman_rk_t</var> type. If memory cannot be
  allocated, NULL is returned.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_credman_rk_free</code>() function releases
  the memory backing <var class="Fa" title="Fa">*rk_p</var>, where
  <var class="Fa" title="Fa">*rk_p</var> must have been previously allocated by
  <code class="Fn" title="Fn">fido_credman_rk_new</code>(). On return,
  <var class="Fa" title="Fa">*rk_p</var> is set to NULL. Either
  <var class="Fa" title="Fa">rk_p</var> or
  <var class="Fa" title="Fa">*rk_p</var> may be NULL, in which case
  <code class="Fn" title="Fn">fido_credman_rk_free</code>() is a NOP.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_credman_get_dev_rk</code>() function
  populates <var class="Fa" title="Fa">rk</var> with the set of resident
  credentials belonging to <var class="Fa" title="Fa">rp_id</var> in
  <var class="Fa" title="Fa">dev</var>. A valid
  <var class="Fa" title="Fa">pin</var> must be provided.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_credman_rk_count</code>() function returns
  the number of resident credentials in <var class="Fa" title="Fa">rk</var>. The
  <code class="Fn" title="Fn">fido_credman_rk</code>() function returns a
  pointer to the credential at index <var class="Fa" title="Fa">idx</var> in
  <var class="Fa" title="Fa">rk</var>. Please note that the first credential in
  <var class="Fa" title="Fa">rk</var> has an
  <var class="Fa" title="Fa">idx</var> (index) value of 0.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_credman_del_dev_rk</code>() function
  deletes the resident credential identified by
  <var class="Fa" title="Fa">cred_id</var> from
  <var class="Fa" title="Fa">dev</var>, where
  <var class="Fa" title="Fa">cred_id</var> points to
  <var class="Fa" title="Fa">cred_id_len</var> bytes. A valid
  <var class="Fa" title="Fa">pin</var> must be provided.
<div class="Pp"></div>
The <var class="Vt" title="Vt">fido_credman_rp_t</var> type abstracts
  information about a relying party.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_credman_rp_new</code>() function returns a
  pointer to a newly allocated, empty
  <var class="Vt" title="Vt">fido_credman_rp_t</var> type. If memory cannot be
  allocated, NULL is returned.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_credman_rp_free</code>() function releases
  the memory backing <var class="Fa" title="Fa">*rp_p</var>, where
  <var class="Fa" title="Fa">*rp_p</var> must have been previously allocated by
  <code class="Fn" title="Fn">fido_credman_rp_new</code>(). On return,
  <var class="Fa" title="Fa">*rp_p</var> is set to NULL. Either
  <var class="Fa" title="Fa">rp_p</var> or
  <var class="Fa" title="Fa">*rp_p</var> may be NULL, in which case
  <code class="Fn" title="Fn">fido_credman_rp_free</code>() is a NOP.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_credman_get_dev_rp</code>() function
  populates <var class="Fa" title="Fa">rp</var> with information about relying
  parties with resident credentials in <var class="Fa" title="Fa">dev</var>. A
  valid <var class="Fa" title="Fa">pin</var> must be provided.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_credman_rp_count</code>() function returns
  the number of relying parties in <var class="Fa" title="Fa">rp</var>.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_credman_rp_id</code>() and
  <code class="Fn" title="Fn">fido_credman_rp_name</code>() functions return
  pointers to the id and name of relying party
  <var class="Fa" title="Fa">idx</var> in <var class="Fa" title="Fa">rp</var>.
  If not NULL, the values returned by these functions point to NUL-terminated
  UTF-8 strings. Please note that the first relying party in
  <var class="Fa" title="Fa">rp</var> has an
  <var class="Fa" title="Fa">idx</var> (index) value of 0.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_credman_rp_id_hash_ptr</code>() function
  returns a pointer to the hashed id of relying party
  <var class="Fa" title="Fa">idx</var> in <var class="Fa" title="Fa">rp</var>.
  The corresponding length can be obtained by
  <code class="Fn" title="Fn">fido_credman_rp_id_hash_len</code>(). Please note
  that the first relying party in <var class="Fa" title="Fa">rp</var> has an
  <var class="Fa" title="Fa">idx</var> (index) value of 0.
<h1 class="Sh" title="Sh" id="RETURN_VALUES"><a class="permalink" href="#RETURN_VALUES">RETURN
  VALUES</a></h1>
The <code class="Fn" title="Fn">fido_credman_get_dev_metadata</code>(),
  <code class="Fn" title="Fn">fido_credman_get_dev_rk</code>(),
  <code class="Fn" title="Fn">fido_credman_del_dev_rk</code>(), and
  <code class="Fn" title="Fn">fido_credman_get_dev_rp</code>() functions return
  <code class="Dv" title="Dv">FIDO_OK</code> on success. On error, a different
  error code defined in
  <code class="In" title="In">&lt;<a class="In" title="In">fido/err.h</a>&gt;</code>
  is returned. Functions returning pointers are not guaranteed to succeed, and
  should have their return values checked for NULL.
<h1 class="Sh" title="Sh" id="SEE_ALSO"><a class="permalink" href="#SEE_ALSO">SEE
  ALSO</a></h1>
<a class="Xr" title="Xr" href="fido_cbor_info_new.html">fido_cbor_info_new(3)</a>,
  <a class="Xr" title="Xr" href="fido_cred_new.html">fido_cred_new(3)</a>
<h1 class="Sh" title="Sh" id="CAVEATS"><a class="permalink" href="#CAVEATS">CAVEATS</a></h1>
Credential management is a tentative feature of FIDO 2.1. Applications willing
  to strictly abide by FIDO 2.0 should refrain from using credential management.
  Applications using credential management should ensure it is supported by the
  authenticator prior to using the API. Since FIDO 2.1 hasn't been finalised,
  there is a chance the functionality and associated data structures may
  change.</div>
<table class="foot">
  <tr>
    <td class="foot-date">June 28, 2019</td>
    <td class="foot-os">Linux 5.3.12-arch1-1</td>
  </tr>
</table>
