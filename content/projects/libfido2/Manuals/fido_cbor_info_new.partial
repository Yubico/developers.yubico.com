<style>
    table.head, table.foot { width: 100%; }
    td.head-rtitle, td.foot-os { text-align: right; }
    td.head-vol { text-align: center; }
    div.Pp { margin: 1ex 0ex; }
    div.Nd, div.Bf, div.Op { display: inline; }
    span.Pa, span.Ad { font-style: italic; }
    span.Ms { font-weight: bold; }
    dl.Bl-diag > dt { font-weight: bold; }
    code.Nm, code.Fl, code.Cm, code.Ic, code.In, code.Fd, code.Fn,
    code.Cd { font-weight: bold; font-family: monospace; }
    var { font-family: monospace; }
    .Sh { font-size: 1.5em; padding-top: 1em; padding-bottom: 1em; }
</style>
<table class="head">
  <tr>
    <td class="head-ltitle">FIDO_CBOR_INFO_NEW(3)</td>
    <td class="head-vol">Library Functions Manual</td>
    <td class="head-rtitle">FIDO_CBOR_INFO_NEW(3)</td>
  </tr>
</table>
<div class="manual-text">
<h1 class="Sh" title="Sh" id="NAME"><a class="permalink" href="#NAME">NAME</a></h1>
<code class="Nm" title="Nm">fido_cbor_info_new</code>,
  <code class="Nm" title="Nm">fido_cbor_info_free</code>,
  <code class="Nm" title="Nm">fido_dev_get_cbor_info</code>,
  <code class="Nm" title="Nm">fido_cbor_info_aaguid_ptr</code>,
  <code class="Nm" title="Nm">fido_cbor_info_extensions_ptr</code>,
  <code class="Nm" title="Nm">fido_cbor_info_protocols_ptr</code>,
  <code class="Nm" title="Nm">fido_cbor_info_transports_ptr</code>,
  <code class="Nm" title="Nm">fido_cbor_info_versions_ptr</code>,
  <code class="Nm" title="Nm">fido_cbor_info_options_name_ptr</code>,
  <code class="Nm" title="Nm">fido_cbor_info_options_value_ptr</code>,
  <code class="Nm" title="Nm">fido_cbor_info_algorithm_type</code>,
  <code class="Nm" title="Nm">fido_cbor_info_algorithm_cose</code>,
  <code class="Nm" title="Nm">fido_cbor_info_algorithm_count</code>,
  <code class="Nm" title="Nm">fido_cbor_info_certs_name_ptr</code>,
  <code class="Nm" title="Nm">fido_cbor_info_certs_value_ptr</code>,
  <code class="Nm" title="Nm">fido_cbor_info_certs_len</code>,
  <code class="Nm" title="Nm">fido_cbor_info_aaguid_len</code>,
  <code class="Nm" title="Nm">fido_cbor_info_extensions_len</code>,
  <code class="Nm" title="Nm">fido_cbor_info_protocols_len</code>,
  <code class="Nm" title="Nm">fido_cbor_info_transports_len</code>,
  <code class="Nm" title="Nm">fido_cbor_info_versions_len</code>,
  <code class="Nm" title="Nm">fido_cbor_info_options_len</code>,
  <code class="Nm" title="Nm">fido_cbor_info_maxmsgsiz</code>,
  <code class="Nm" title="Nm">fido_cbor_info_maxcredbloblen</code>,
  <code class="Nm" title="Nm">fido_cbor_info_maxcredcntlst</code>,
  <code class="Nm" title="Nm">fido_cbor_info_maxcredidlen</code>,
  <code class="Nm" title="Nm">fido_cbor_info_maxlargeblob</code>,
  <code class="Nm" title="Nm">fido_cbor_info_maxrpid_minpinlen</code>,
  <code class="Nm" title="Nm">fido_cbor_info_minpinlen</code>,
  <code class="Nm" title="Nm">fido_cbor_info_fwversion</code>,
  <code class="Nm" title="Nm">fido_cbor_info_uv_attempts</code>,
  <code class="Nm" title="Nm">fido_cbor_info_uv_modality</code>,
  <code class="Nm" title="Nm">fido_cbor_info_rk_remaining</code>,
  <code class="Nm" title="Nm">fido_cbor_info_new_pin_required</code> &#x2014;
<div class="Nd" title="Nd">FIDO2 CBOR Info API</div>
<h1 class="Sh" title="Sh" id="SYNOPSIS"><a class="permalink" href="#SYNOPSIS">SYNOPSIS</a></h1>
<code class="In" title="In">#include
  &lt;<a class="In" title="In">fido.h</a>&gt;</code>
<div class="Pp"></div>
<var class="Ft" title="Ft">fido_cbor_info_t *</var>
<br/>
<code class="Fn" title="Fn">fido_cbor_info_new</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">void</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">void</var>
<br/>
<code class="Fn" title="Fn">fido_cbor_info_free</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">fido_cbor_info_t
  **ci_p</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">int</var>
<br/>
<code class="Fn" title="Fn">fido_dev_get_cbor_info</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">fido_dev_t
  *dev</var>,
  <var class="Fa" title="Fa" style="white-space: nowrap;">fido_cbor_info_t
  *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">const unsigned char *</var>
<br/>
<code class="Fn" title="Fn">fido_cbor_info_aaguid_ptr</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">char **</var>
<br/>
<code class="Fn" title="Fn">fido_cbor_info_extensions_ptr</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">const uint8_t *</var>
<br/>
<code class="Fn" title="Fn">fido_cbor_info_protocols_ptr</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">char **</var>
<br/>
<code class="Fn" title="Fn">fido_cbor_info_transports_ptr</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">char **</var>
<br/>
<code class="Fn" title="Fn">fido_cbor_info_versions_ptr</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">char **</var>
<br/>
<code class="Fn" title="Fn">fido_cbor_info_options_name_ptr</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">const bool *</var>
<br/>
<code class="Fn" title="Fn">fido_cbor_info_options_value_ptr</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">const char *</var>
<br/>
<code class="Fn" title="Fn">fido_cbor_info_algorithm_type</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>,
  <var class="Fa" title="Fa" style="white-space: nowrap;">size_t idx</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">int</var>
<br/>
<code class="Fn" title="Fn">fido_cbor_info_algorithm_cose</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>,
  <var class="Fa" title="Fa" style="white-space: nowrap;">size_t idx</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">size_t</var>
<br/>
<code class="Fn" title="Fn">fido_cbor_info_algorithm_count</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">char **</var>
<br/>
<code class="Fn" title="Fn">fido_cbor_info_certs_name_ptr</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">const uint64_t *</var>
<br/>
<code class="Fn" title="Fn">fido_cbor_info_certs_value_ptr</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">size_t</var>
<br/>
<code class="Fn" title="Fn">fido_cbor_info_certs_len</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">size_t</var>
<br/>
<code class="Fn" title="Fn">fido_cbor_info_aaguid_len</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">size_t</var>
<br/>
<code class="Fn" title="Fn">fido_cbor_info_extensions_len</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">size_t</var>
<br/>
<code class="Fn" title="Fn">fido_cbor_info_protocols_len</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">size_t</var>
<br/>
<code class="Fn" title="Fn">fido_cbor_info_transports_len</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">size_t</var>
<br/>
<code class="Fn" title="Fn">fido_cbor_info_versions_len</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">size_t</var>
<br/>
<code class="Fn" title="Fn">fido_cbor_info_options_len</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">uint64_t</var>
<br/>
<code class="Fn" title="Fn">fido_cbor_info_maxmsgsiz</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">uint64_t</var>
<br/>
<code class="Fn" title="Fn">fido_cbor_info_maxcredbloblen</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">uint64_t</var>
<br/>
<code class="Fn" title="Fn">fido_cbor_info_maxcredcntlst</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">uint64_t</var>
<br/>
<code class="Fn" title="Fn">fido_cbor_info_maxcredidlen</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">uint64_t</var>
<br/>
<code class="Fn" title="Fn">fido_cbor_info_maxlargeblob</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">uint64_t</var>
<br/>
<code class="Fn" title="Fn">fido_cbor_info_maxrpid_minpinlen</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">uint64_t</var>
<br/>
<code class="Fn" title="Fn">fido_cbor_info_minpinlen</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">uint64_t</var>
<br/>
<code class="Fn" title="Fn">fido_cbor_info_fwversion</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">uint64_t</var>
<br/>
<code class="Fn" title="Fn">fido_cbor_info_uv_attempts</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">uint64_t</var>
<br/>
<code class="Fn" title="Fn">fido_cbor_info_uv_modality</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">int64_t</var>
<br/>
<code class="Fn" title="Fn">fido_cbor_info_rk_remaining</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">bool</var>
<br/>
<code class="Fn" title="Fn">fido_cbor_info_new_pin_required</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<h1 class="Sh" title="Sh" id="DESCRIPTION"><a class="permalink" href="#DESCRIPTION">DESCRIPTION</a></h1>
The <code class="Fn" title="Fn">fido_cbor_info_new</code>() function returns a
  pointer to a newly allocated, empty
  <var class="Vt" title="Vt">fido_cbor_info_t</var> type. If memory cannot be
  allocated, NULL is returned.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_cbor_info_free</code>() function releases
  the memory backing <var class="Fa" title="Fa">*ci_p</var>, where
  <var class="Fa" title="Fa">*ci_p</var> must have been previously allocated by
  <code class="Fn" title="Fn">fido_cbor_info_new</code>(). On return,
  <var class="Fa" title="Fa">*ci_p</var> is set to NULL. Either
  <var class="Fa" title="Fa">ci_p</var> or
  <var class="Fa" title="Fa">*ci_p</var> may be NULL, in which case
  <code class="Fn" title="Fn">fido_cbor_info_free</code>() is a NOP.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_dev_get_cbor_info</code>() function
  transmits a <code class="Dv" title="Dv">CTAP_CBOR_GETINFO</code> command to
  <var class="Fa" title="Fa">dev</var> and fills
  <var class="Fa" title="Fa">ci</var> with attributes retrieved from the
  command's response. The
  <code class="Fn" title="Fn">fido_dev_get_cbor_info</code>() function may
  block.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_cbor_info_aaguid_ptr</code>(),
  <code class="Fn" title="Fn">fido_cbor_info_extensions_ptr</code>(),
  <code class="Fn" title="Fn">fido_cbor_info_protocols_ptr</code>(),
  <code class="Fn" title="Fn">fido_cbor_info_transports_ptr</code>(), and
  <code class="Fn" title="Fn">fido_cbor_info_versions_ptr</code>() functions
  return pointers to the authenticator attestation GUID, supported extensions,
  PIN protocol, transports, and CTAP version strings of
  <var class="Fa" title="Fa">ci</var>. The corresponding length of a given
  attribute can be obtained by
  <code class="Fn" title="Fn">fido_cbor_info_aaguid_len</code>(),
  <code class="Fn" title="Fn">fido_cbor_info_extensions_len</code>(),
  <code class="Fn" title="Fn">fido_cbor_info_protocols_len</code>(),
  <code class="Fn" title="Fn">fido_cbor_info_transports_len</code>(), or
  <code class="Fn" title="Fn">fido_cbor_info_versions_len</code>().
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_cbor_info_options_name_ptr</code>() and
  <code class="Fn" title="Fn">fido_cbor_info_options_value_ptr</code>()
  functions return pointers to the array of option names and their respective
  values in <var class="Fa" title="Fa">ci</var>. The length of the options array
  is returned by
  <code class="Fn" title="Fn">fido_cbor_info_options_len</code>().
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_cbor_info_algorithm_count</code>() function
  returns the number of supported algorithms in
  <var class="Fa" title="Fa">ci</var>. The
  <code class="Fn" title="Fn">fido_cbor_info_algorithm_cose</code>() function
  returns the COSE identifier of algorithm <var class="Fa" title="Fa">idx</var>
  in <var class="Fa" title="Fa">ci</var>, or 0 if the COSE identifier is unknown
  or unset. The
  <code class="Fn" title="Fn">fido_cbor_info_algorithm_type</code>() function
  returns the type of algorithm <var class="Fa" title="Fa">idx</var> in
  <var class="Fa" title="Fa">ci</var>, or NULL if the type is unset. Please note
  that the first algorithm in <var class="Fa" title="Fa">ci</var> has an
  <var class="Fa" title="Fa">idx</var> (index) value of 0.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_cbor_info_certs_name_ptr</code>() and
  <code class="Fn" title="Fn">fido_cbor_info_certs_value_ptr</code>() functions
  return pointers to the array of certification names and their respective
  values in <var class="Fa" title="Fa">ci</var>. The length of the
  certifications array is returned by
  <code class="Fn" title="Fn">fido_cbor_info_certs_len</code>().
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_cbor_info_maxmsgsiz</code>() function
  returns the maximum message size attribute of
  <var class="Fa" title="Fa">ci</var>.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_cbor_info_maxcredbloblen</code>() function
  returns the maximum &#x201C;credBlob&#x201D; length in bytes supported by the
  authenticator as reported in <var class="Fa" title="Fa">ci</var>.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_cbor_info_maxcredcntlst</code>() function
  returns the maximum supported number of credentials in a single credential ID
  list as reported in <var class="Fa" title="Fa">ci</var>.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_cbor_info_maxcredidlen</code>() function
  returns the maximum supported length of a credential ID as reported in
  <var class="Fa" title="Fa">ci</var>.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_cbor_info_maxrpid_minpinlen</code>()
  function returns the maximum number of RP IDs that may be passed to
  <a class="Xr" title="Xr" href="fido_dev_set_pin_minlen_rpid.html">fido_dev_set_pin_minlen_rpid(3)</a>,
  as reported in <var class="Fa" title="Fa">ci</var>. The minimum PIN length
  attribute is a CTAP 2.1 addition. If the attribute is not advertised by the
  authenticator, the
  <code class="Fn" title="Fn">fido_cbor_info_maxrpid_minpinlen</code>() function
  returns zero.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_cbor_info_maxlargeblob</code>() function
  returns the maximum length in bytes of an authenticator's serialized largeBlob
  array as reported in <var class="Fa" title="Fa">ci</var>.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_cbor_info_minpinlen</code>() function
  returns the minimum PIN length enforced by the authenticator as reported in
  <var class="Fa" title="Fa">ci</var>. The minimum PIN length attribute is a
  CTAP 2.1 addition. If the attribute is not advertised by the authenticator,
  the <code class="Fn" title="Fn">fido_cbor_info_minpinlen</code>() function
  returns zero.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_cbor_info_fwversion</code>() function
  returns the firmware version attribute of <var class="Fa" title="Fa">ci</var>.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_cbor_info_uv_attempts</code>() function
  returns the number of UV attempts that the platform may attempt before falling
  back to PIN authentication. If 1, then all
  <a class="Xr" title="Xr" href="fido_dev_get_uv_retry_count.html">fido_dev_get_uv_retry_count(3)</a>
  retries are handled internally by the authenticator and the platform may only
  attempt non-PIN UV once. The UV attempts attribute is a CTAP 2.1 addition. If
  the attribute is not advertised by the authenticator, the
  <code class="Fn" title="Fn">fido_cbor_info_uv_attempts</code>() function
  returns zero.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_cbor_info_uv_modality</code>() function
  returns a bitmask representing different UV modes supported by the
  authenticator, as defined in the FIDO Registry of Predefined Values and
  reported in <var class="Fa" title="Fa">ci</var>. See the
  <i class="Em" title="Em">FIDO_UV_MODE_*</i> definitions in
  <code class="In" title="In">&lt;<a class="In" title="In">fido/param.h</a>&gt;</code>
  for the set of values defined by libfido2 and a brief description of each. The
  UV modality attribute is a CTAP 2.1 addition. If the attribute is not
  advertised by the authenticator, the
  <code class="Fn" title="Fn">fido_cbor_info_uv_modality</code>() function
  returns zero.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_cbor_info_rk_remaining</code>() function
  returns the estimated number of additional resident/discoverable credentials
  that can be stored on the authenticator as reported in
  <var class="Fa" title="Fa">ci</var>. The estimated number of remaining
  resident credentials is a CTAP 2.1 addition. If the attribute is not
  advertised by the authenticator, the
  <code class="Fn" title="Fn">fido_cbor_info_rk_remaining</code>() function
  returns -1.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_cbor_info_new_pin_required</code>()
  function returns whether a new PIN is required by the authenticator as
  reported in <var class="Fa" title="Fa">ci</var>. If
  <code class="Fn" title="Fn">fido_cbor_info_new_pin_required</code>() returns
  true, operations requiring PIN authentication will fail until a new PIN is set
  on the authenticator. The
  <a class="Xr" title="Xr" href="fido_dev_set_pin.html">fido_dev_set_pin(3)</a>
  function can be used to set a new PIN.
<div class="Pp"></div>
A complete example of how to use these functions can be found in the
  <span class="Pa" title="Pa">example/info.c</span> file shipped with
  <i class="Em" title="Em">libfido2</i>.
<h1 class="Sh" title="Sh" id="RETURN_VALUES"><a class="permalink" href="#RETURN_VALUES">RETURN
  VALUES</a></h1>
The <code class="Fn" title="Fn">fido_cbor_info_aaguid_ptr</code>(),
  <code class="Fn" title="Fn">fido_cbor_info_extensions_ptr</code>(),
  <code class="Fn" title="Fn">fido_cbor_info_protocols_ptr</code>(),
  <code class="Fn" title="Fn">fido_cbor_info_transports_ptr</code>(),
  <code class="Fn" title="Fn">fido_cbor_info_versions_ptr</code>(),
  <code class="Fn" title="Fn">fido_cbor_info_options_name_ptr</code>(), and
  <code class="Fn" title="Fn">fido_cbor_info_options_value_ptr</code>()
  functions return NULL if the respective field in
  <var class="Fa" title="Fa">ci</var> is absent. If not NULL, returned pointers
  are guaranteed to exist until any API function that takes
  <var class="Fa" title="Fa">ci</var> without the
  <i class="Em" title="Em">const</i> qualifier is invoked.
<h1 class="Sh" title="Sh" id="SEE_ALSO"><a class="permalink" href="#SEE_ALSO">SEE
  ALSO</a></h1>
<a class="Xr" title="Xr" href="fido_dev_get_uv_retry_count.html">fido_dev_get_uv_retry_count(3)</a>,
  <a class="Xr" title="Xr" href="fido_dev_open.html">fido_dev_open(3)</a>,
  <a class="Xr" title="Xr" href="fido_dev_set_pin.html">fido_dev_set_pin(3)</a>,
  <a class="Xr" title="Xr" href="fido_dev_set_pin_minlen_rpid.html">fido_dev_set_pin_minlen_rpid(3)</a>
<div class="Pp"></div>
<cite class="Rs" title="Rs"><span class="RsR">FIDO Registry of Predefined
  Values</span>,
  <a class="RsU" href="https://fidoalliance.org/specs/common-specs/fido-registry-v2.2-rd-20210525.html">https://fidoalliance.org/specs/common-specs/fido-registry-v2.2-rd-20210525.html</a>,
  <span class="RsQ">FIDO Alliance</span>, <span class="RsD">2021-05-25</span>,
  <span class="RsO">Review Draft, Version 2.2</span>.</cite></div>
<table class="foot">
  <tr>
    <td class="foot-date">April 22, 2022</td>
    <td class="foot-os">Linux 5.17.4-200.fc35.x86_64</td>
  </tr>
</table>
