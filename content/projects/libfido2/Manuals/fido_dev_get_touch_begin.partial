<style>
    table.head, table.foot { width: 100%; }
    td.head-rtitle, td.foot-os { text-align: right; }
    td.head-vol { text-align: center; }
    div.Pp { margin: 1ex 0ex; }
    div.Nd, div.Bf, div.Op { display: inline; }
    span.Pa, span.Ad { font-style: italic; }
    span.Ms { font-weight: bold; }
    dl.Bl-diag > dt { font-weight: bold; }
    code.Nm, code.Fl, code.Cm, code.Ic, code.In, code.Fd, code.Fn,
    code.Cd { font-weight: bold; font-family: monospace; }
    var { font-family: monospace; }
    .Sh { font-size: 1.5em; padding-top: 1em; padding-bottom: 1em; }
</style>
<table class="head">
  <tr>
    <td class="head-ltitle">FIDO_DEV_GET_TOUCH_BEGIN(3)</td>
    <td class="head-vol">Library Functions Manual</td>
    <td class="head-rtitle">FIDO_DEV_GET_TOUCH_BEGIN(3)</td>
  </tr>
</table>
<div class="manual-text">
<h1 class="Sh" title="Sh" id="NAME"><a class="permalink" href="#NAME">NAME</a></h1>
<code class="Nm" title="Nm">fido_dev_get_touch_begin</code>,
  <code class="Nm" title="Nm">fido_dev_get_touch_status</code> &#x2014;
<div class="Nd" title="Nd">asynchronously wait for touch on a FIDO2
  authenticator</div>
<h1 class="Sh" title="Sh" id="SYNOPSIS"><a class="permalink" href="#SYNOPSIS">SYNOPSIS</a></h1>
<code class="In" title="In">#include
  &lt;<a class="In" title="In">fido.h</a>&gt;</code>
<div class="Pp"></div>
<var class="Ft" title="Ft">int</var>
<br/>
<code class="Fn" title="Fn">fido_dev_get_touch_begin</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">fido_dev_t
  *dev</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">int</var>
<br/>
<code class="Fn" title="Fn">fido_dev_get_touch_status</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">fido_dev_t
  *dev</var>, <var class="Fa" title="Fa" style="white-space: nowrap;">int
  *touched</var>, <var class="Fa" title="Fa" style="white-space: nowrap;">int
  ms</var>);
<h1 class="Sh" title="Sh" id="DESCRIPTION"><a class="permalink" href="#DESCRIPTION">DESCRIPTION</a></h1>
The functions described in this page allow an application to asynchronously wait
  for touch on a FIDO2 authenticator. This is useful when multiple
  authenticators are present and the application needs to know which one to use.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_dev_get_touch_begin</code>() function
  initiates a touch request on <var class="Fa" title="Fa">dev</var>.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_dev_get_touch_status</code>() function
  continues an ongoing touch request on <var class="Fa" title="Fa">dev</var>,
  blocking up to <var class="Fa" title="Fa">ms</var> milliseconds. On success,
  <var class="Fa" title="Fa">touched</var> will be updated to reflect the touch
  request status. If <var class="Fa" title="Fa">touched</var> is 1, the device
  was touched, and the touch request is terminated. If
  <var class="Fa" title="Fa">touched</var> is 0, the application may call
  <code class="Fn" title="Fn">fido_dev_get_touch_status</code>() to continue the
  touch request, or <code class="Fn" title="Fn">fido_dev_cancel</code>() to
  terminate it.
<h1 class="Sh" title="Sh" id="RETURN_VALUES"><a class="permalink" href="#RETURN_VALUES">RETURN
  VALUES</a></h1>
The error codes returned by
  <code class="Fn" title="Fn">fido_dev_get_touch_begin</code>() and
  <code class="Fn" title="Fn">fido_dev_get_touch_status</code>() are defined in
  <code class="In" title="In">&lt;<a class="In" title="In">fido/err.h</a>&gt;</code>.
  On success, <code class="Dv" title="Dv">FIDO_OK</code> is returned.
<h1 class="Sh" title="Sh" id="EXAMPLES"><a class="permalink" href="#EXAMPLES">EXAMPLES</a></h1>
Please refer to <i class="Em" title="Em">examples/select.c</i> in
  <i class="Em" title="Em">libfido2's</i> source tree.
<h1 class="Sh" title="Sh" id="SEE_ALSO"><a class="permalink" href="#SEE_ALSO">SEE
  ALSO</a></h1>
<a class="Xr" title="Xr" href="fido_dev_cancel.html">fido_dev_cancel(3)</a>
<h1 class="Sh" title="Sh" id="CAVEATS"><a class="permalink" href="#CAVEATS">CAVEATS</a></h1>
The <code class="Fn" title="Fn">fido_dev_get_touch_status</code>() function will
  cause a command to be transmitted to U2F authenticators. These transmissions
  should not exceed a frequency of 5Hz.</div>
<table class="foot">
  <tr>
    <td class="foot-date">August 5, 2020</td>
    <td class="foot-os">Darwin 19.6.0</td>
  </tr>
</table>
