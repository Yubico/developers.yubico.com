<style>
    table.head, table.foot { width: 100%; }
    td.head-rtitle, td.foot-os { text-align: right; }
    td.head-vol { text-align: center; }
    div.Pp { margin: 1ex 0ex; }
    div.Nd, div.Bf, div.Op { display: inline; }
    span.Pa, span.Ad { font-style: italic; }
    span.Ms { font-weight: bold; }
    dl.Bl-diag > dt { font-weight: bold; }
    code.Nm, code.Fl, code.Cm, code.Ic, code.In, code.Fd, code.Fn,
    code.Cd { font-weight: bold; font-family: monospace; }
    var { font-family: monospace; }
    .Sh { font-size: 1.5em; padding-top: 1em; padding-bottom: 1em; }
</style>
<table class="head">
  <tr>
    <td class="head-ltitle">FIDO2-ASSERT(1)</td>
    <td class="head-vol">General Commands Manual</td>
    <td class="head-rtitle">FIDO2-ASSERT(1)</td>
  </tr>
</table>
<div class="manual-text">
<h1 class="Sh" title="Sh" id="NAME"><a class="permalink" href="#NAME">NAME</a></h1>
<code class="Nm" title="Nm">fido2-assert</code> &#x2014;
<div class="Nd" title="Nd">get/verify a FIDO 2 assertion</div>
<h1 class="Sh" title="Sh" id="SYNOPSIS"><a class="permalink" href="#SYNOPSIS">SYNOPSIS</a></h1>
<table class="Nm">
  <tr>
    <td><code class="Nm" title="Nm">fido2-assert</code></td>
    <td><code class="Fl" title="Fl">-G</code>
      [<div class="Op"><code class="Fl" title="Fl">-dpruv</code></div>]
      [<div class="Op"><code class="Fl" title="Fl">-i</code>
      <var class="Ar" title="Ar">input_file</var></div>]
      [<div class="Op"><code class="Fl" title="Fl">-o</code>
      <var class="Ar" title="Ar">output_file</var></div>]
      <var class="Ar" title="Ar">device</var></td>
  </tr>
</table>
<br/>
<table class="Nm">
  <tr>
    <td><code class="Nm" title="Nm">fido2-assert</code></td>
    <td><code class="Fl" title="Fl">-V</code>
      [<div class="Op"><code class="Fl" title="Fl">-dpv</code></div>]
      [<div class="Op"><code class="Fl" title="Fl">-i</code>
      <var class="Ar" title="Ar">input_file</var></div>]
      <var class="Ar" title="Ar">key_file</var>
      [<div class="Op"><var class="Ar" title="Ar">type</var></div>]</td>
  </tr>
</table>
<h1 class="Sh" title="Sh" id="DESCRIPTION"><a class="permalink" href="#DESCRIPTION">DESCRIPTION</a></h1>
<code class="Nm" title="Nm">fido2-assert</code> gets or verifies a FIDO 2
  assertion.
<div class="Pp"></div>
The input of <code class="Nm" title="Nm">fido2-assert</code> is defined by the
  parameters of the assertion to be obtained/verified. See the
  <a class="Sx" title="Sx" href="#INPUT_FORMAT">INPUT FORMAT</a> section for
  details.
<div class="Pp"></div>
The output of <code class="Nm" title="Nm">fido2-assert</code> is defined by the
  result of the selected operation. See the
  <a class="Sx" title="Sx" href="#OUTPUT_FORMAT">OUTPUT FORMAT</a> section for
  details.
<div class="Pp"></div>
If an assertion is successfully obtained or verified,
  <code class="Nm" title="Nm">fido2-assert</code> exits 0. Otherwise,
  <code class="Nm" title="Nm">fido2-assert</code> exits 1.
<div class="Pp"></div>
The options are as follows:
<dl class="Bl-tag">
  <dt><a class="permalink" href="#G"><code class="Fl" title="Fl" id="G">-G</code></a></dt>
  <dd>Tells <code class="Nm" title="Nm">fido2-assert</code> to obtain a new
      assertion from <var class="Ar" title="Ar">device</var>.</dd>
  <dt><a class="permalink" href="#V"><code class="Fl" title="Fl" id="V">-V</code></a></dt>
  <dd>Tells <code class="Nm" title="Nm">fido2-assert</code> to verify an
      assertion using the PEM-encoded public key in
      <var class="Ar" title="Ar">key_file</var> of type
      <var class="Ar" title="Ar">type</var>, where
      <var class="Ar" title="Ar">type</var> may be
      <i class="Em" title="Em">es256</i> (denoting ECDSA over NIST P-256 with
      SHA-256), <i class="Em" title="Em">rs256</i> (denoting 2048-bit RSA with
      PKCS#1.5 padding and SHA-256), or <i class="Em" title="Em">eddsa</i>
      (denoting EDDSA over Curve25519 with SHA-512). If
      <var class="Ar" title="Ar">type</var> is not specified,
      <i class="Em" title="Em">es256</i> is assumed.</dd>
  <dt><a class="permalink" href="#d"><code class="Fl" title="Fl" id="d">-d</code></a></dt>
  <dd>Causes <code class="Nm" title="Nm">fido2-assert</code> to emit debugging
      output on <i class="Em" title="Em">stderr</i>.</dd>
  <dt><a class="permalink" href="#i"><code class="Fl" title="Fl" id="i">-i</code></a>
    <var class="Ar" title="Ar">input_file</var></dt>
  <dd>Tells <code class="Nm" title="Nm">fido2-assert</code> to read the
      parameters of the assertion from
      <var class="Ar" title="Ar">input_file</var> instead of
      <i class="Em" title="Em">stdin</i>.</dd>
  <dt><a class="permalink" href="#o"><code class="Fl" title="Fl" id="o">-o</code></a>
    <var class="Ar" title="Ar">output_file</var></dt>
  <dd>Tells <code class="Nm" title="Nm">fido2-assert</code> to write output on
      <var class="Ar" title="Ar">output_file</var> instead of
      <i class="Em" title="Em">stdout</i>.</dd>
  <dt><a class="permalink" href="#p"><code class="Fl" title="Fl" id="p">-p</code></a></dt>
  <dd>If obtaining an assertion, request user presence. If verifying an
      assertion, check whether the user presence bit was signed by the
      authenticator.</dd>
  <dt><a class="permalink" href="#r"><code class="Fl" title="Fl" id="r">-r</code></a></dt>
  <dd>Obtain an assertion using a resident credential. If
      <code class="Fl" title="Fl">-r</code> is specified,
      <code class="Nm" title="Nm">fido2-assert</code> will not expect a
      credential id in its input, and may output multiple assertions.</dd>
  <dt><a class="permalink" href="#u"><code class="Fl" title="Fl" id="u">-u</code></a></dt>
  <dd>Obtain an assertion using U2F. By default,
      <code class="Nm" title="Nm">fido2-assert</code> will use FIDO2 if
      supported by the authenticator, and fallback to U2F otherwise.</dd>
  <dt><a class="permalink" href="#v"><code class="Fl" title="Fl" id="v">-v</code></a></dt>
  <dd>If obtaining an assertion, prompt the user for a PIN and request user
      verification from the authenticator. If a <i class="Em" title="Em">tty</i>
      is available, <code class="Nm" title="Nm">fido2-assert</code> will use it
      to obtain the PIN. Otherwise, <i class="Em" title="Em">stdin</i> is used.
      If verifying an assertion, check whether the user verification bit was
      signed by the authenticator.</dd>
</dl>
<h1 class="Sh" title="Sh" id="INPUT_FORMAT"><a class="permalink" href="#INPUT_FORMAT">INPUT
  FORMAT</a></h1>
The input of <code class="Nm" title="Nm">fido2-assert</code> consists of base64
  blobs and UTF-8 strings separated by newline characters ('\n').
<div class="Pp"></div>
When obtaining an assertion, <code class="Nm" title="Nm">fido2-assert</code>
  expects its input to consist of:
<div class="Pp"></div>
<ol class="Bl-enum Bd-indent Bl-compac">
  <li>client data hash (base64 blob);</li>
  <li>relying party id (UTF-8 string);</li>
  <li>credential id, if credential not resident (base64 blob);</li>
</ol>
<div class="Pp"></div>
When verifying an assertion, <code class="Nm" title="Nm">fido2-assert</code>
  expects its input to consist of:
<div class="Pp"></div>
<ol class="Bl-enum Bd-indent Bl-compac">
  <li>client data hash (base64 blob);</li>
  <li>relying party id (UTF-8 string);</li>
  <li>authenticator data (base64 blob);</li>
  <li>assertion signature (base64 blob);</li>
</ol>
<div class="Pp"></div>
UTF-8 strings passed to <code class="Nm" title="Nm">fido2-assert</code> must not
  contain embedded newline or NUL characters.
<h1 class="Sh" title="Sh" id="OUTPUT_FORMAT"><a class="permalink" href="#OUTPUT_FORMAT">OUTPUT
  FORMAT</a></h1>
The output of <code class="Nm" title="Nm">fido2-assert</code> consists of base64
  blobs and UTF-8 strings separated by newline characters ('\n').
<div class="Pp"></div>
For each generated assertion, <code class="Nm" title="Nm">fido2-assert</code>
  outputs:
<div class="Pp"></div>
<ol class="Bl-enum Bd-indent Bl-compac">
  <li>client data hash (base64 blob);</li>
  <li>relying party id (UTF-8 string);</li>
  <li>authenticator data (base64 blob);</li>
  <li>assertion signature (base64 blob);</li>
  <li>user id, if credential resident (base64 blob);</li>
</ol>
<div class="Pp"></div>
When verifying an assertion, <code class="Nm" title="Nm">fido2-assert</code>
  produces no output.
<h1 class="Sh" title="Sh" id="EXAMPLES"><a class="permalink" href="#EXAMPLES">EXAMPLES</a></h1>
Assuming <span class="Pa" title="Pa">cred</span> contains a
  <i class="Em" title="Em">es256</i> credential created according to the steps
  outlined in <a class="Xr" title="Xr" href="fido2-cred.html">fido2-cred(1)</a>,
  obtain an assertion from an authenticator at
  <span class="Pa" title="Pa">/dev/hidraw5</span> and verify it:
<div class="Pp"></div>
<div class="Bd Bd-indent"><code class="Li">$ echo assertion challenge | openssl
  sha256 -binary | base64 &gt; assert_param</code></div>
<div class="Bd Bd-indent"><code class="Li">$ echo relying party &gt;&gt;
  assert_param</code></div>
<div class="Bd Bd-indent"><code class="Li">$ head -1 cred &gt;&gt;
  assert_param</code></div>
<div class="Bd Bd-indent"><code class="Li">$ tail -n +2 cred &gt;
  pubkey</code></div>
<div class="Bd Bd-indent"><code class="Li">$ fido2-assert -G -i assert_param
  /dev/hidraw5 | fido2-assert -V pubkey es256</code></div>
<h1 class="Sh" title="Sh" id="SEE_ALSO"><a class="permalink" href="#SEE_ALSO">SEE
  ALSO</a></h1>
<a class="Xr" title="Xr" href="fido2-cred.html">fido2-cred(1)</a>,
  <a class="Xr" title="Xr" href="fido2-token.html">fido2-token(1)</a></div>
<table class="foot">
  <tr>
    <td class="foot-date">June 14, 2018</td>
    <td class="foot-os">Linux 5.2.1-arch1-1-ARCH</td>
  </tr>
</table>
