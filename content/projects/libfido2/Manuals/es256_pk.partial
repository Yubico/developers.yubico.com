<table class="head">
  <tr>
    <td class="head-ltitle">ES256_PK(3)</td>
    <td class="head-vol">Library Functions Manual</td>
    <td class="head-rtitle">ES256_PK(3)</td>
  </tr>
</table>
<div class="manual-text">
<h1 class="Sh" title="Sh" id="NAME"><a class="selflink" href="#NAME">NAME</a></h1>
<b class="Nm" title="Nm">es256_pk_new</b>,
  <b class="Nm" title="Nm">es256_pk_free</b>,
  <b class="Nm" title="Nm">es256_pk_from_EC_KEY</b>,
  <b class="Nm" title="Nm">es256_pk_from_ptr</b>,
  <b class="Nm" title="Nm">es256_pk_to_EVP_PKEY</b> &#x2014;
  <span class="Nd" title="Nd">FIDO 2 COSE ES256 API</span>
<h1 class="Sh" title="Sh" id="SYNOPSIS"><a class="selflink" href="#SYNOPSIS">SYNOPSIS</a></h1>
<b class="In" title="In">#include
  &lt;<a class="In" title="In">openssl/ec.h</a>&gt;</b>
<br/>
<b class="In" title="In">#include
  &lt;<a class="In" title="In">fido/es256.h</a>&gt;</b>
<div class="Pp"></div>
<var class="Ft" title="Ft">es256_pk_t *</var>
<br/>
<b class="Fn" title="Fn">es256_pk_new</b>(<var class="Fa" title="Fa" style="white-space: nowrap;">void</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">void</var>
<br/>
<b class="Fn" title="Fn">es256_pk_free</b>(<var class="Fa" title="Fa" style="white-space: nowrap;">es256_pk_t
  **pkp</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">int</var>
<br/>
<b class="Fn" title="Fn">es256_pk_from_EC_KEY</b>(<var class="Fa" title="Fa" style="white-space: nowrap;">es256_pk_t
  *pk</var>, <var class="Fa" title="Fa" style="white-space: nowrap;">const
  EC_KEY *ec</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">int</var>
<br/>
<b class="Fn" title="Fn">es256_pk_from_ptr</b>(<var class="Fa" title="Fa" style="white-space: nowrap;">es256_pk_t
  *pk</var>, <var class="Fa" title="Fa" style="white-space: nowrap;">const void
  *ptr</var>, <var class="Fa" title="Fa" style="white-space: nowrap;">size_t
  len</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">EVP_PKEY *</var>
<br/>
<b class="Fn" title="Fn">es256_pk_to_EVP_PKEY</b>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  es256_pk_t *pk</var>);
<h1 class="Sh" title="Sh" id="DESCRIPTION"><a class="selflink" href="#DESCRIPTION">DESCRIPTION</a></h1>
ES256 is the name given in the CBOR Object Signing and Encryption (COSE) RFC to
  ECDSA over P-256 with SHA-256. The COSE ES256 API of
  <i class="Em" title="Em">libfido2</i> is an auxiliary API with routines to
  convert between the different ECDSA public key types used in
  <i class="Em" title="Em">libfido2</i> and
  <i class="Em" title="Em">OpenSSL</i>.
<div class="Pp"></div>
In <i class="Em" title="Em">libfido2</i>, ES256 public keys are abstracted by
  the <var class="Vt" title="Vt">es256_pk_t</var> type.
<div class="Pp"></div>
The <b class="Fn" title="Fn">es256_pk_new</b>() function returns a pointer to a
  newly allocated, empty <var class="Vt" title="Vt">es256_pk_t</var> type. If
  memory cannot be allocated, NULL is returned.
<div class="Pp"></div>
The <b class="Fn" title="Fn">es256_pk_free</b>() function releases the memory
  backing <var class="Fa" title="Fa">*pkp</var>, where
  <var class="Fa" title="Fa">*pkp</var> must have been previously allocated by
  <b class="Fn" title="Fn">es256_pk_new</b>(). On return,
  <var class="Fa" title="Fa">*pkp</var> is set to NULL. Either
  <var class="Fa" title="Fa">pkp</var> or <var class="Fa" title="Fa">*pkp</var>
  may be NULL, in which case <b class="Fn" title="Fn">es256_pk_free</b>() is a
  NOP.
<div class="Pp"></div>
The <b class="Fn" title="Fn">es256_pk_from_EC_KEY</b>() function fills
  <var class="Fa" title="Fa">pk</var> with the contents of
  <var class="Fa" title="Fa">ec</var>. No references to
  <var class="Fa" title="Fa">ec</var> are kept.
<div class="Pp"></div>
The <b class="Fn" title="Fn">es256_pk_from_ptr</b>() function fills
  <var class="Fa" title="Fa">pk</var> with the contents of
  <var class="Fa" title="Fa">ptr</var>, where
  <var class="Fa" title="Fa">ptr</var> points to
  <var class="Fa" title="Fa">len</var> bytes. No references to
  <var class="Fa" title="Fa">ptr</var> are kept.
<div class="Pp"></div>
The <b class="Fn" title="Fn">es256_pk_to_EVP_PKEY</b>() function converts
  <var class="Fa" title="Fa">pk</var> to a newly allocated
  <var class="Fa" title="Fa">EVP_PKEY</var> type with a reference count of 1. No
  internal references to the returned pointer are kept. If an error occurs,
  <b class="Fn" title="Fn">es256_pk_to_EVP_PKEY</b>() returns NULL.
<h1 class="Sh" title="Sh" id="RETURN_VALUES"><a class="selflink" href="#RETURN_VALUES">RETURN
  VALUES</a></h1>
The <b class="Fn" title="Fn">es256_pk_from_EC_KEY</b>() and
  <b class="Fn" title="Fn">es256_pk_from_ptr</b>() functions return
  <code class="Dv" title="Dv">FIDO_OK</code> on success. On error, a different
  error code defined in
  <b class="In" title="In">&lt;<a class="In" title="In">fido/err.h</a>&gt;</b>
  is returned.
<h1 class="Sh" title="Sh" id="SEE_ALSO"><a class="selflink" href="#SEE_ALSO">SEE
  ALSO</a></h1>
<a class="Xr" title="Xr" href="fido_assert_verify.html">fido_assert_verify(3)</a>,
  <a class="Xr" title="Xr" href="fido_cred_pubkey_ptr.html">fido_cred_pubkey_ptr(3)</a>,
  <a class="Xr" title="Xr" href="rs256_pk.html">rs256_pk(3)</a></div>
<table class="foot">
  <tr>
    <td class="foot-date">May 24, 2018</td>
    <td class="foot-os">Linux 4.16.11-1-ARCH</td>
  </tr>
</table>
