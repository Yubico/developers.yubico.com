<style>
    table.head, table.foot { width: 100%; }
    td.head-rtitle, td.foot-os { text-align: right; }
    td.head-vol { text-align: center; }
    div.Pp { margin: 1ex 0ex; }
    div.Nd, div.Bf, div.Op { display: inline; }
    span.Pa, span.Ad { font-style: italic; }
    span.Ms { font-weight: bold; }
    dl.Bl-diag > dt { font-weight: bold; }
    code.Nm, code.Fl, code.Cm, code.Ic, code.In, code.Fd, code.Fn,
    code.Cd { font-weight: bold; font-family: monospace; }
    var { font-family: monospace; }
    .Sh { font-size: 1.5em; padding-top: 1em; padding-bottom: 1em; }
</style>
<table class="head">
  <tr>
    <td class="head-ltitle">FIDO_CRED_NEW(3)</td>
    <td class="head-vol">Library Functions Manual</td>
    <td class="head-rtitle">FIDO_CRED_NEW(3)</td>
  </tr>
</table>
<div class="manual-text">
<h1 class="Sh" title="Sh" id="NAME"><a class="permalink" href="#NAME">NAME</a></h1>
<code class="Nm" title="Nm">fido_cred_new</code>,
  <code class="Nm" title="Nm">fido_cred_free</code>,
  <code class="Nm" title="Nm">fido_cred_pin_minlen</code>,
  <code class="Nm" title="Nm">fido_cred_prot</code>,
  <code class="Nm" title="Nm">fido_cred_fmt</code>,
  <code class="Nm" title="Nm">fido_cred_rp_id</code>,
  <code class="Nm" title="Nm">fido_cred_rp_name</code>,
  <code class="Nm" title="Nm">fido_cred_user_name</code>,
  <code class="Nm" title="Nm">fido_cred_display_name</code>,
  <code class="Nm" title="Nm">fido_cred_authdata_ptr</code>,
  <code class="Nm" title="Nm">fido_cred_authdata_raw_ptr</code>,
  <code class="Nm" title="Nm">fido_cred_clientdata_hash_ptr</code>,
  <code class="Nm" title="Nm">fido_cred_id_ptr</code>,
  <code class="Nm" title="Nm">fido_cred_aaguid_ptr</code>,
  <code class="Nm" title="Nm">fido_cred_largeblob_key_ptr</code>,
  <code class="Nm" title="Nm">fido_cred_pubkey_ptr</code>,
  <code class="Nm" title="Nm">fido_cred_sig_ptr</code>,
  <code class="Nm" title="Nm">fido_cred_user_id_ptr</code>,
  <code class="Nm" title="Nm">fido_cred_x5c_ptr</code>,
  <code class="Nm" title="Nm">fido_cred_attstmt_ptr</code>,
  <code class="Nm" title="Nm">fido_cred_authdata_len</code>,
  <code class="Nm" title="Nm">fido_cred_authdata_raw_len</code>,
  <code class="Nm" title="Nm">fido_cred_clientdata_hash_len</code>,
  <code class="Nm" title="Nm">fido_cred_id_len</code>,
  <code class="Nm" title="Nm">fido_cred_aaguid_len</code>,
  <code class="Nm" title="Nm">fido_cred_largeblob_key_len</code>,
  <code class="Nm" title="Nm">fido_cred_pubkey_len</code>,
  <code class="Nm" title="Nm">fido_cred_sig_len</code>,
  <code class="Nm" title="Nm">fido_cred_user_id_len</code>,
  <code class="Nm" title="Nm">fido_cred_x5c_len</code>,
  <code class="Nm" title="Nm">fido_cred_attstmt_len</code>,
  <code class="Nm" title="Nm">fido_cred_type</code>,
  <code class="Nm" title="Nm">fido_cred_flags</code>,
  <code class="Nm" title="Nm">fido_cred_sigcount</code> &#x2014;
<div class="Nd" title="Nd">FIDO 2 credential API</div>
<h1 class="Sh" title="Sh" id="SYNOPSIS"><a class="permalink" href="#SYNOPSIS">SYNOPSIS</a></h1>
<code class="In" title="In">#include
  &lt;<a class="In" title="In">fido.h</a>&gt;</code>
<div class="Pp"></div>
<var class="Ft" title="Ft">fido_cred_t *</var>
<br/>
<code class="Fn" title="Fn">fido_cred_new</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">void</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">void</var>
<br/>
<code class="Fn" title="Fn">fido_cred_free</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">fido_cred_t
  **cred_p</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">size_t</var>
<br/>
<code class="Fn" title="Fn">fido_cred_pin_minlen</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">int</var>
<br/>
<code class="Fn" title="Fn">fido_cred_prot</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">const char *</var>
<br/>
<code class="Fn" title="Fn">fido_cred_fmt</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">const char *</var>
<br/>
<code class="Fn" title="Fn">fido_cred_rp_id</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">const char *</var>
<br/>
<code class="Fn" title="Fn">fido_cred_rp_name</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">const char *</var>
<br/>
<code class="Fn" title="Fn">fido_cred_user_name</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">const char *</var>
<br/>
<code class="Fn" title="Fn">fido_cred_display_name</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">const unsigned char *</var>
<br/>
<code class="Fn" title="Fn">fido_cred_authdata_ptr</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">const unsigned char *</var>
<br/>
<code class="Fn" title="Fn">fido_cred_authdata_raw_ptr</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">const unsigned char *</var>
<br/>
<code class="Fn" title="Fn">fido_cred_clientdata_hash_ptr</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">const unsigned char *</var>
<br/>
<code class="Fn" title="Fn">fido_cred_id_ptr</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">const unsigned char *</var>
<br/>
<code class="Fn" title="Fn">fido_cred_aaguid_ptr</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">const unsigned char *</var>
<br/>
<code class="Fn" title="Fn">fido_cred_largeblob_key_ptr</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">const unsigned char *</var>
<br/>
<code class="Fn" title="Fn">fido_cred_pubkey_ptr</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">const unsigned char *</var>
<br/>
<code class="Fn" title="Fn">fido_cred_sig_ptr</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">const unsigned char *</var>
<br/>
<code class="Fn" title="Fn">fido_cred_user_id_ptr</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">const unsigned char *</var>
<br/>
<code class="Fn" title="Fn">fido_cred_x5c_ptr</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">const unsigned char *</var>
<br/>
<code class="Fn" title="Fn">fido_cred_attstmt_ptr</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">size_t</var>
<br/>
<code class="Fn" title="Fn">fido_cred_authdata_len</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">size_t</var>
<br/>
<code class="Fn" title="Fn">fido_cred_authdata_raw_len</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">size_t</var>
<br/>
<code class="Fn" title="Fn">fido_cred_clientdata_hash_len</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">size_t</var>
<br/>
<code class="Fn" title="Fn">fido_cred_id_len</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">size_t</var>
<br/>
<code class="Fn" title="Fn">fido_cred_aaguid_len</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">size_t</var>
<br/>
<code class="Fn" title="Fn">fido_cred_largeblob_key_len</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">size_t</var>
<br/>
<code class="Fn" title="Fn">fido_cred_pubkey_len</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">size_t</var>
<br/>
<code class="Fn" title="Fn">fido_cred_sig_len</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">size_t</var>
<br/>
<code class="Fn" title="Fn">fido_cred_user_id_len</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">size_t</var>
<br/>
<code class="Fn" title="Fn">fido_cred_x5c_len</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">size_t</var>
<br/>
<code class="Fn" title="Fn">fido_cred_attstmt_len</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">int</var>
<br/>
<code class="Fn" title="Fn">fido_cred_type</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">uint8_t</var>
<br/>
<code class="Fn" title="Fn">fido_cred_flags</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">uint32_t</var>
<br/>
<code class="Fn" title="Fn">fido_cred_sigcount</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<h1 class="Sh" title="Sh" id="DESCRIPTION"><a class="permalink" href="#DESCRIPTION">DESCRIPTION</a></h1>
FIDO 2 credentials are abstracted in <i class="Em" title="Em">libfido2</i> by
  the <var class="Vt" title="Vt">fido_cred_t</var> type. The functions described
  in this page allow a <var class="Vt" title="Vt">fido_cred_t</var> type to be
  allocated, deallocated, and inspected. For other operations on
  <var class="Vt" title="Vt">fido_cred_t</var>, please refer to
  <a class="Xr" title="Xr" href="fido_cred_set_authdata.html">fido_cred_set_authdata(3)</a>,
  <a class="Xr" title="Xr" href="fido_cred_exclude.html">fido_cred_exclude(3)</a>,
  <a class="Xr" title="Xr" href="fido_cred_verify.html">fido_cred_verify(3)</a>,
  and
  <a class="Xr" title="Xr" href="fido_dev_make_cred.html">fido_dev_make_cred(3)</a>.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_cred_new</code>() function returns a
  pointer to a newly allocated, empty
  <var class="Vt" title="Vt">fido_cred_t</var> type. If memory cannot be
  allocated, NULL is returned.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_cred_free</code>() function releases the
  memory backing <var class="Fa" title="Fa">*cred_p</var>, where
  <var class="Fa" title="Fa">*cred_p</var> must have been previously allocated
  by <code class="Fn" title="Fn">fido_cred_new</code>(). On return,
  <var class="Fa" title="Fa">*cred_p</var> is set to NULL. Either
  <var class="Fa" title="Fa">cred_p</var> or
  <var class="Fa" title="Fa">*cred_p</var> may be NULL, in which case
  <code class="Fn" title="Fn">fido_cred_free</code>() is a NOP.
<div class="Pp"></div>
If the FIDO 2.1 <code class="Dv" title="Dv">FIDO_EXT_MINPINLEN</code> extension
  is enabled on <var class="Fa" title="Fa">cred</var>, then the
  <code class="Fn" title="Fn">fido_cred_pin_minlen</code>() function returns the
  minimum PIN length of <var class="Fa" title="Fa">cred</var>. Otherwise,
  <code class="Fn" title="Fn">fido_cred_pin_minlen</code>() returns zero. See
  <a class="Xr" title="Xr" href="fido_cred_set_pin_minlen.html">fido_cred_set_pin_minlen(3)</a>
  on how to enable this extension.
<div class="Pp"></div>
If the FIDO 2.1 <code class="Dv" title="Dv">FIDO_EXT_CRED_PROTECT</code>
  extension is enabled on <var class="Fa" title="Fa">cred</var>, then the
  <code class="Fn" title="Fn">fido_cred_prot</code>() function returns the
  protection of <var class="Fa" title="Fa">cred</var>. Otherwise,
  <code class="Fn" title="Fn">fido_cred_prot</code>() returns zero. See
  <a class="Xr" title="Xr" href="fido_cred_set_prot.html">fido_cred_set_prot(3)</a>
  for the protection policies understood by
  <i class="Em" title="Em">libfido2</i>.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_cred_fmt</code>() function returns a
  pointer to a NUL-terminated string containing the format of
  <var class="Fa" title="Fa">cred</var>, or NULL if
  <var class="Fa" title="Fa">cred</var> does not have a format set.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_cred_rp_id</code>(),
  <code class="Fn" title="Fn">fido_cred_rp_name</code>(),
  <code class="Fn" title="Fn">fido_cred_user_name</code>(), and
  <code class="Fn" title="Fn">fido_cred_display_name</code>() functions return
  pointers to NUL-terminated strings holding the relying party ID, relying party
  name, user name, and user display name attributes of
  <var class="Fa" title="Fa">cred</var>, or NULL if the respective entry is not
  set.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_cred_authdata_ptr</code>(),
  <code class="Fn" title="Fn">fido_cred_authdata_raw_ptr</code>(),
  <code class="Fn" title="Fn">fido_cred_clientdata_hash_ptr</code>(),
  <code class="Fn" title="Fn">fido_cred_id_ptr</code>(),
  <code class="Fn" title="Fn">fido_cred_aaguid_ptr</code>(),
  <code class="Fn" title="Fn">fido_cred_largeblob_key_ptr</code>(),
  <code class="Fn" title="Fn">fido_cred_pubkey_ptr</code>(),
  <code class="Fn" title="Fn">fido_cred_sig_ptr</code>(),
  <code class="Fn" title="Fn">fido_cred_user_id_ptr</code>(),
  <code class="Fn" title="Fn">fido_cred_x5c_ptr</code>(), and
  <code class="Fn" title="Fn">fido_cred_attstmt_ptr</code>() functions return
  pointers to the CBOR-encoded and raw authenticator data, client data hash, ID,
  authenticator attestation GUID, &#x201C;largeBlobKey&#x201D;, public key,
  signature, user ID, x509 certificate, and attestation statement parts of
  <var class="Fa" title="Fa">cred</var>, or NULL if the respective entry is not
  set.
<div class="Pp"></div>
The corresponding length can be obtained by
  <code class="Fn" title="Fn">fido_cred_authdata_len</code>(),
  <code class="Fn" title="Fn">fido_cred_authdata_raw_len</code>(),
  <code class="Fn" title="Fn">fido_cred_clientdata_hash_len</code>(),
  <code class="Fn" title="Fn">fido_cred_id_len</code>(),
  <code class="Fn" title="Fn">fido_cred_aaguid_len</code>(),
  <code class="Fn" title="Fn">fido_cred_largeblob_key_len</code>(),
  <code class="Fn" title="Fn">fido_cred_pubkey_len</code>(),
  <code class="Fn" title="Fn">fido_cred_sig_len</code>(),
  <code class="Fn" title="Fn">fido_cred_user_id_len</code>(),
  <code class="Fn" title="Fn">fido_cred_x5c_len</code>(), and
  <code class="Fn" title="Fn">fido_cred_attstmt_len</code>().
<div class="Pp"></div>
The authenticator data, x509 certificate, and signature parts of a credential
  are typically passed to a FIDO 2 server for verification.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_cred_type</code>() function returns the
  COSE algorithm of <var class="Fa" title="Fa">cred</var>.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_cred_flags</code>() function returns the
  authenticator data flags of <var class="Fa" title="Fa">cred</var>.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_cred_sigcount</code>() function returns the
  authenticator data signature counter of <var class="Fa" title="Fa">cred</var>.
<h1 class="Sh" title="Sh" id="RETURN_VALUES"><a class="permalink" href="#RETURN_VALUES">RETURN
  VALUES</a></h1>
The authenticator data returned by
  <code class="Fn" title="Fn">fido_cred_authdata_ptr</code>() is a CBOR-encoded
  byte string, as obtained from the authenticator. To obtain the decoded byte
  string, use <code class="Fn" title="Fn">fido_cred_authdata_raw_ptr</code>().
<div class="Pp"></div>
If not NULL, pointers returned by
  <code class="Fn" title="Fn">fido_cred_fmt</code>(),
  <code class="Fn" title="Fn">fido_cred_authdata_ptr</code>(),
  <code class="Fn" title="Fn">fido_cred_clientdata_hash_ptr</code>(),
  <code class="Fn" title="Fn">fido_cred_id_ptr</code>(),
  <code class="Fn" title="Fn">fido_cred_aaguid_ptr</code>(),
  <code class="Fn" title="Fn">fido_cred_largeblob_key_ptr</code>(),
  <code class="Fn" title="Fn">fido_cred_pubkey_ptr</code>(),
  <code class="Fn" title="Fn">fido_cred_sig_ptr</code>(), and
  <code class="Fn" title="Fn">fido_cred_x5c_ptr</code>() are guaranteed to exist
  until any API function that takes <var class="Fa" title="Fa">cred</var>
  without the <i class="Em" title="Em">const</i> qualifier is invoked.
<h1 class="Sh" title="Sh" id="SEE_ALSO"><a class="permalink" href="#SEE_ALSO">SEE
  ALSO</a></h1>
<a class="Xr" title="Xr" href="fido_cred_exclude.html">fido_cred_exclude(3)</a>,
  <a class="Xr" title="Xr" href="fido_cred_set_authdata.html">fido_cred_set_authdata(3)</a>,
  <a class="Xr" title="Xr" href="fido_cred_set_pin_minlen.html">fido_cred_set_pin_minlen(3)</a>,
  <a class="Xr" title="Xr" href="fido_cred_set_prot.html">fido_cred_set_prot(3)</a>,
  <a class="Xr" title="Xr" href="fido_cred_verify.html">fido_cred_verify(3)</a>,
  <a class="Xr" title="Xr" href="fido_credman_metadata_new.html">fido_credman_metadata_new(3)</a>,
  <a class="Xr" title="Xr" href="fido_dev_largeblob_get.html">fido_dev_largeblob_get(3)</a>,
  <a class="Xr" title="Xr" href="fido_dev_make_cred.html">fido_dev_make_cred(3)</a></div>
<table class="foot">
  <tr>
    <td class="foot-date">May 23, 2018</td>
    <td class="foot-os">Linux 5.3.12-arch1-1</td>
  </tr>
</table>
