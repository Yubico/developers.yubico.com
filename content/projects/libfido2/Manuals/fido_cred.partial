<table class="head">
  <tr>
    <td class="head-ltitle">FIDO_CRED(3)</td>
    <td class="head-vol">Library Functions Manual</td>
    <td class="head-rtitle">FIDO_CRED(3)</td>
  </tr>
</table>
<div class="manual-text">
<h1 class="Sh" title="Sh" id="NAME"><a class="selflink" href="#NAME">NAME</a></h1>
<b class="Nm" title="Nm">fido_cred_new</b>,
  <b class="Nm" title="Nm">fido_cred_free</b>,
  <b class="Nm" title="Nm">fido_cred_fmt</b>,
  <b class="Nm" title="Nm">fido_cred_authdata_ptr</b>,
  <b class="Nm" title="Nm">fido_cred_clientdata_hash_ptr</b>,
  <b class="Nm" title="Nm">fido_cred_id_ptr</b>,
  <b class="Nm" title="Nm">fido_cred_pubkey_ptr</b>,
  <b class="Nm" title="Nm">fido_cred_sig_ptr</b>,
  <b class="Nm" title="Nm">fido_cred_x5c_ptr</b>,
  <b class="Nm" title="Nm">fido_cred_authdata_len</b>,
  <b class="Nm" title="Nm">fido_cred_clientdata_hash_len</b>,
  <b class="Nm" title="Nm">fido_cred_id_len</b>,
  <b class="Nm" title="Nm">fido_cred_pubkey_len</b>,
  <b class="Nm" title="Nm">fido_cred_sig_len</b>,
  <b class="Nm" title="Nm">fido_cred_x5c_len</b> &#x2014;
  <span class="Nd" title="Nd">FIDO 2 credential API</span>
<h1 class="Sh" title="Sh" id="SYNOPSIS"><a class="selflink" href="#SYNOPSIS">SYNOPSIS</a></h1>
<b class="In" title="In">#include
  &lt;<a class="In" title="In">fido.h</a>&gt;</b>
<div class="Pp"></div>
<var class="Ft" title="Ft">fido_cred_t *</var>
<br/>
<b class="Fn" title="Fn">fido_cred_new</b>(<var class="Fa" title="Fa" style="white-space: nowrap;">void</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">void</var>
<br/>
<b class="Fn" title="Fn">fido_cred_free</b>(<var class="Fa" title="Fa" style="white-space: nowrap;">fido_cred_t
  **cred_p</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">const char *</var>
<br/>
<b class="Fn" title="Fn">fido_cred_fmt</b>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">const unsigned char *</var>
<br/>
<b class="Fn" title="Fn">fido_cred_authdata_ptr</b>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">const unsigned char *</var>
<br/>
<b class="Fn" title="Fn">fido_cred_clientdata_hash_ptr</b>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">const unsigned char *</var>
<br/>
<b class="Fn" title="Fn">fido_cred_id_ptr</b>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">const unsigned char *</var>
<br/>
<b class="Fn" title="Fn">fido_cred_pubkey_ptr</b>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">const unsigned char *</var>
<br/>
<b class="Fn" title="Fn">fido_cred_sig_ptr</b>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">const unsigned char *</var>
<br/>
<b class="Fn" title="Fn">fido_cred_x5c_ptr</b>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">size_t</var>
<br/>
<b class="Fn" title="Fn">fido_cred_authdata_len</b>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">size_t</var>
<br/>
<b class="Fn" title="Fn">fido_cred_clientdata_hash_len</b>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">size_t</var>
<br/>
<b class="Fn" title="Fn">fido_cred_id_len</b>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">size_t</var>
<br/>
<b class="Fn" title="Fn">fido_cred_pubkey_len</b>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">size_t</var>
<br/>
<b class="Fn" title="Fn">fido_cred_sig_len</b>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">size_t</var>
<br/>
<b class="Fn" title="Fn">fido_cred_x5c_len</b>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cred_t *cred</var>);
<h1 class="Sh" title="Sh" id="DESCRIPTION"><a class="selflink" href="#DESCRIPTION">DESCRIPTION</a></h1>
FIDO 2 credentials are abstracted in <i class="Em" title="Em">libfido2</i> by
  the <var class="Vt" title="Vt">fido_cred_t</var> type. The functions described
  in this page allow a <var class="Vt" title="Vt">fido_cred_t</var> type to be
  allocated, deallocated, and inspected. For other operations on
  <var class="Vt" title="Vt">fido_cred_t</var>, please refer to
  <a class="Xr" title="Xr" href="fido_cred_set.html">fido_cred_set(3)</a>,
  <a class="Xr" title="Xr" href="fido_cred_exclude.html">fido_cred_exclude(3)</a>,
  <a class="Xr" title="Xr" href="fido_cred_verify.html">fido_cred_verify(3)</a>,
  and
  <a class="Xr" title="Xr" href="fido_dev_make_cred.html">fido_dev_make_cred(3)</a>.
<div class="Pp"></div>
The <b class="Fn" title="Fn">fido_cred_new</b>() function returns a pointer to a
  newly allocated, empty <var class="Vt" title="Vt">fido_cred_t</var> type. If
  memory cannot be allocated, NULL is returned.
<div class="Pp"></div>
The <b class="Fn" title="Fn">fido_cred_free</b>() function releases the memory
  backing <var class="Fa" title="Fa">*cred_p</var>, where
  <var class="Fa" title="Fa">*cred_p</var> must have been previously allocated
  by <b class="Fn" title="Fn">fido_cred_new</b>(). On return,
  <var class="Fa" title="Fa">*cred_p</var> is set to NULL. Either
  <var class="Fa" title="Fa">cred_p</var> or
  <var class="Fa" title="Fa">*cred_p</var> may be NULL, in which case
  <b class="Fn" title="Fn">fido_cred_free</b>() is a NOP.
<div class="Pp"></div>
The <b class="Fn" title="Fn">fido_cred_fmt</b>() function returns a pointer to a
  NUL-terminated string containing the format of
  <var class="Fa" title="Fa">cred</var>, or NULL if
  <var class="Fa" title="Fa">cred</var> does not have a format set.
<div class="Pp"></div>
The <b class="Fn" title="Fn">fido_cred_authdata_ptr</b>(),
  <b class="Fn" title="Fn">fido_cred_clientdata_hash_ptr</b>(),
  <b class="Fn" title="Fn">fido_cred_id_ptr</b>(),
  <b class="Fn" title="Fn">fido_cred_pubkey_ptr</b>(),
  <b class="Fn" title="Fn">fido_cred_sig_ptr</b>(), and
  <b class="Fn" title="Fn">fido_cred_x5c_ptr</b>() functions return pointers to
  the authenticator data, client data hash, ID, public key, signature and x509
  certificate parts of <var class="Fa" title="Fa">cred</var>, or NULL if the
  respective entry is not set.
<div class="Pp"></div>
The corresponding length can be obtained by
  <b class="Fn" title="Fn">fido_cred_authdata_len</b>(),
  <b class="Fn" title="Fn">fido_cred_clientdata_hash_len</b>(),
  <b class="Fn" title="Fn">fido_cred_id_len</b>(),
  <b class="Fn" title="Fn">fido_cred_pubkey_len</b>(), and
  <b class="Fn" title="Fn">fido_cred_sig_len</b>().
<div class="Pp"></div>
The authenticator data, x509 certificate, and signature parts of a credential
  are typically passed to a FIDO 2 server for verification.
<h1 class="Sh" title="Sh" id="RETURN_VALUES"><a class="selflink" href="#RETURN_VALUES">RETURN
  VALUES</a></h1>
If not NULL, pointers returned by <b class="Fn" title="Fn">fido_cred_fmt</b>(),
  <b class="Fn" title="Fn">fido_cred_authdata_ptr</b>(),
  <b class="Fn" title="Fn">fido_cred_clientdata_hash_ptr</b>(),
  <b class="Fn" title="Fn">fido_cred_id_ptr</b>(),
  <b class="Fn" title="Fn">fido_cred_pubkey_ptr</b>(),
  <b class="Fn" title="Fn">fido_cred_sig_ptr</b>(), and
  <b class="Fn" title="Fn">fido_cred_x5c_ptr</b>() are guaranteed to exist until
  any API function that takes <var class="Fa" title="Fa">cred</var> without the
  <i class="Em" title="Em">const</i> qualifier is invoked.
<h1 class="Sh" title="Sh" id="SEE_ALSO"><a class="selflink" href="#SEE_ALSO">SEE
  ALSO</a></h1>
<a class="Xr" title="Xr" href="fido_cred_exclude.html">fido_cred_exclude(3)</a>,
  <a class="Xr" title="Xr" href="fido_cred_set.html">fido_cred_set(3)</a>,
  <a class="Xr" title="Xr" href="fido_cred_verify.html">fido_cred_verify(3)</a>,
  <a class="Xr" title="Xr" href="fido_dev_make_cred.html">fido_dev_make_cred(3)</a></div>
<table class="foot">
  <tr>
    <td class="foot-date">May 23, 2018</td>
    <td class="foot-os">Linux 4.16.11-1-ARCH</td>
  </tr>
</table>
