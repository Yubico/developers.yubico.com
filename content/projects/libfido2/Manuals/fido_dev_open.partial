<style>
    table.head, table.foot { width: 100%; }
    td.head-rtitle, td.foot-os { text-align: right; }
    td.head-vol { text-align: center; }
    div.Pp { margin: 1ex 0ex; }
    div.Nd, div.Bf, div.Op { display: inline; }
    span.Pa, span.Ad { font-style: italic; }
    span.Ms { font-weight: bold; }
    dl.Bl-diag > dt { font-weight: bold; }
    code.Nm, code.Fl, code.Cm, code.Ic, code.In, code.Fd, code.Fn,
    code.Cd { font-weight: bold; font-family: monospace; }
    var { font-family: monospace; }
    .Sh { font-size: 1.5em; padding-top: 1em; padding-bottom: 1em; }
</style>
<table class="head">
  <tr>
    <td class="head-ltitle">FIDO_DEV_OPEN(3)</td>
    <td class="head-vol">Library Functions Manual</td>
    <td class="head-rtitle">FIDO_DEV_OPEN(3)</td>
  </tr>
</table>
<div class="manual-text">
<h1 class="Sh" title="Sh" id="NAME"><a class="permalink" href="#NAME">NAME</a></h1>
<code class="Nm" title="Nm">fido_dev_open</code>,
  <code class="Nm" title="Nm">fido_dev_close</code>,
  <code class="Nm" title="Nm">fido_dev_new</code>,
  <code class="Nm" title="Nm">fido_dev_free</code>,
  <code class="Nm" title="Nm">fido_dev_force_fido2</code>,
  <code class="Nm" title="Nm">fido_dev_force_u2f</code>,
  <code class="Nm" title="Nm">fido_dev_is_fido2</code>,
  <code class="Nm" title="Nm">fido_dev_protocol</code>,
  <code class="Nm" title="Nm">fido_dev_build</code>,
  <code class="Nm" title="Nm">fido_dev_flags</code>,
  <code class="Nm" title="Nm">fido_dev_major</code>,
  <code class="Nm" title="Nm">fido_dev_minor</code> &#x2014;
<div class="Nd" title="Nd">FIDO 2 device open/close and related functions</div>
<h1 class="Sh" title="Sh" id="SYNOPSIS"><a class="permalink" href="#SYNOPSIS">SYNOPSIS</a></h1>
<code class="In" title="In">#include
  &lt;<a class="In" title="In">fido.h</a>&gt;</code>
<div class="Pp"></div>
<var class="Ft" title="Ft">int</var>
<br/>
<code class="Fn" title="Fn">fido_dev_open</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">fido_dev_t
  *dev</var>, <var class="Fa" title="Fa" style="white-space: nowrap;">const char
  *path</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">int</var>
<br/>
<code class="Fn" title="Fn">fido_dev_close</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">fido_dev_t
  *dev</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">fido_dev_t *</var>
<br/>
<code class="Fn" title="Fn">fido_dev_new</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">void</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">void</var>
<br/>
<code class="Fn" title="Fn">fido_dev_free</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">fido_dev_t
  **dev_p</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">void</var>
<br/>
<code class="Fn" title="Fn">fido_dev_force_fido2</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">fido_dev_t
  *dev</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">void</var>
<br/>
<code class="Fn" title="Fn">fido_dev_force_u2f</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">fido_dev_t
  *dev</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">bool</var>
<br/>
<code class="Fn" title="Fn">fido_dev_is_fido2</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_dev_t *dev</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">uint8_t</var>
<br/>
<code class="Fn" title="Fn">fido_dev_protocol</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_dev_t *dev</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">uint8_t</var>
<br/>
<code class="Fn" title="Fn">fido_dev_build</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_dev_t *dev</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">uint8_t</var>
<br/>
<code class="Fn" title="Fn">fido_dev_flags</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_dev_t *dev</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">uint8_t</var>
<br/>
<code class="Fn" title="Fn">fido_dev_major</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_dev_t *dev</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">uint8_t</var>
<br/>
<code class="Fn" title="Fn">fido_dev_minor</code>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_dev_t *dev</var>);
<h1 class="Sh" title="Sh" id="DESCRIPTION"><a class="permalink" href="#DESCRIPTION">DESCRIPTION</a></h1>
The <code class="Fn" title="Fn">fido_dev_open</code>() function opens the device
  pointed to by <var class="Fa" title="Fa">path</var>, where
  <var class="Fa" title="Fa">dev</var> is a freshly allocated or otherwise
  closed <var class="Vt" title="Vt">fido_dev_t</var>.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_dev_close</code>() function closes the
  device represented by <var class="Fa" title="Fa">dev</var>. If
  <var class="Fa" title="Fa">dev</var> is already closed,
  <code class="Fn" title="Fn">fido_dev_close</code>() is a NOP.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_dev_new</code>() function returns a pointer
  to a newly allocated, empty <var class="Vt" title="Vt">fido_dev_t</var>. If
  memory cannot be allocated, NULL is returned.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_dev_free</code>() function releases the
  memory backing <var class="Fa" title="Fa">*dev_p</var>, where
  <var class="Fa" title="Fa">*dev_p</var> must have been previously allocated by
  <code class="Fn" title="Fn">fido_dev_new</code>(). On return,
  <var class="Fa" title="Fa">*dev_p</var> is set to NULL. Either
  <var class="Fa" title="Fa">dev_p</var> or
  <var class="Fa" title="Fa">*dev_p</var> may be NULL, in which case
  <code class="Fn" title="Fn">fido_dev_free</code>() is a NOP.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_dev_force_fido2</code>() function can be
  used to force CTAP2 communication with <var class="Fa" title="Fa">dev</var>.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_dev_force_u2f</code>() function can be used
  to force CTAP1 (U2F) communication with <var class="Fa" title="Fa">dev</var>.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_dev_is_fido2</code>() function returns
  <code class="Dv" title="Dv">true</code> if
  <var class="Fa" title="Fa">dev</var> is a FIDO 2 device.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_dev_protocol</code>() function returns the
  CTAPHID protocol version identifier of <var class="Fa" title="Fa">dev</var>.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_dev_build</code>() function returns the
  CTAPHID build version number of <var class="Fa" title="Fa">dev</var>.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_dev_flags</code>() function returns the
  CTAPHID capabilities flags of <var class="Fa" title="Fa">dev</var>.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_dev_major</code>() function returns the
  CTAPHID major version number of <var class="Fa" title="Fa">dev</var>.
<div class="Pp"></div>
The <code class="Fn" title="Fn">fido_dev_minor</code>() function returns the
  CTAPHID minor version number of <var class="Fa" title="Fa">dev</var>.
<div class="Pp"></div>
For the format and meaning of the CTAPHID parameters returned by functions
  above, please refer to the FIDO Client to Authenticator Protocol (CTAP)
  specification.
<h1 class="Sh" title="Sh" id="RETURN_VALUES"><a class="permalink" href="#RETURN_VALUES">RETURN
  VALUES</a></h1>
On success, <code class="Fn" title="Fn">fido_dev_open</code>() and
  <code class="Fn" title="Fn">fido_dev_close</code>() return
  <code class="Dv" title="Dv">FIDO_OK</code>. On error, a different error code
  defined in
  <code class="In" title="In">&lt;<a class="In" title="In">fido/err.h</a>&gt;</code>
  is returned.
<h1 class="Sh" title="Sh" id="SEE_ALSO"><a class="permalink" href="#SEE_ALSO">SEE
  ALSO</a></h1>
<a class="Xr" title="Xr" href="fido_dev_info_manifest.html">fido_dev_info_manifest(3)</a>,
  <a class="Xr" title="Xr" href="fido_dev_set_io_functions.html">fido_dev_set_io_functions(3)</a></div>
<table class="foot">
  <tr>
    <td class="foot-date">May 25, 2018</td>
    <td class="foot-os">Linux 5.2.1-arch1-1-ARCH</td>
  </tr>
</table>
