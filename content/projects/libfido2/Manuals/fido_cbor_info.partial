<table class="head">
  <tr>
    <td class="head-ltitle">FIDO_CBOR_INFO(3)</td>
    <td class="head-vol">Library Functions Manual</td>
    <td class="head-rtitle">FIDO_CBOR_INFO(3)</td>
  </tr>
</table>
<div class="manual-text">
<h1 class="Sh" title="Sh" id="NAME"><a class="selflink" href="#NAME">NAME</a></h1>
<b class="Nm" title="Nm">fido_cbor_info_new</b>,
  <b class="Nm" title="Nm">fido_cbor_info_free</b>,
  <b class="Nm" title="Nm">fido_dev_get_cbor_info</b>,
  <b class="Nm" title="Nm">fido_cbor_info_aaguid_ptr</b>,
  <b class="Nm" title="Nm">fido_cbor_info_extensions_ptr</b>,
  <b class="Nm" title="Nm">fido_cbor_info_protocols_ptr</b>,
  <b class="Nm" title="Nm">fido_cbor_info_versions_ptr</b>,
  <b class="Nm" title="Nm">fido_cbor_info_options_name_ptr</b>,
  <b class="Nm" title="Nm">fido_cbor_info_options_value_ptr</b>,
  <b class="Nm" title="Nm">fido_cbor_info_aaguid_len</b>,
  <b class="Nm" title="Nm">fido_cbor_info_extensions_len</b>,
  <b class="Nm" title="Nm">fido_cbor_info_protocols_len</b>,
  <b class="Nm" title="Nm">fido_cbor_info_versions_len</b>,
  <b class="Nm" title="Nm">fido_cbor_info_options_len</b>,
  <b class="Nm" title="Nm">fido_cbor_info_maxmsgsiz</b> &#x2014;
  <span class="Nd" title="Nd">FIDO 2 CBOR Info API</span>
<h1 class="Sh" title="Sh" id="SYNOPSIS"><a class="selflink" href="#SYNOPSIS">SYNOPSIS</a></h1>
<b class="In" title="In">#include
  &lt;<a class="In" title="In">fido.h</a>&gt;</b>
<div class="Pp"></div>
<var class="Ft" title="Ft">fido_cbor_info_t *</var>
<br/>
<b class="Fn" title="Fn">fido_cbor_info_new</b>(<var class="Fa" title="Fa" style="white-space: nowrap;">void</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">void</var>
<br/>
<b class="Fn" title="Fn">fido_cbor_info_free</b>(<var class="Fa" title="Fa" style="white-space: nowrap;">fido_cbor_info_t
  **ci_p</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">int</var>
<br/>
<b class="Fn" title="Fn">fido_dev_get_cbor_info</b>(<var class="Fa" title="Fa" style="white-space: nowrap;">fido_dev_t
  *dev</var>,
  <var class="Fa" title="Fa" style="white-space: nowrap;">fido_cbor_info_t
  *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">const unsigned char *</var>
<br/>
<b class="Fn" title="Fn">fido_cbor_info_aaguid_ptr</b>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">char **</var>
<br/>
<b class="Fn" title="Fn">fido_cbor_info_extensions_ptr</b>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">const uint8_t *</var>
<br/>
<b class="Fn" title="Fn">fido_cbor_info_protocols_ptr</b>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">char **</var>
<br/>
<b class="Fn" title="Fn">fido_cbor_info_versions_ptr</b>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">char **</var>
<br/>
<b class="Fn" title="Fn">fido_cbor_info_options_name_ptr</b>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">const bool *</var>
<br/>
<b class="Fn" title="Fn">fido_cbor_info_options_value_ptr</b>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">size_t</var>
<br/>
<b class="Fn" title="Fn">fido_cbor_info_aaguid_len</b>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">size_t</var>
<br/>
<b class="Fn" title="Fn">fido_cbor_info_extensions_len</b>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">size_t</var>
<br/>
<b class="Fn" title="Fn">fido_cbor_info_protocols_len</b>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">size_t</var>
<br/>
<b class="Fn" title="Fn">fido_cbor_info_versions_len</b>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">size_t</var>
<br/>
<b class="Fn" title="Fn">fido_cbor_info_options_len</b>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<div class="Pp"></div>
<var class="Ft" title="Ft">uint64_t</var>
<br/>
<b class="Fn" title="Fn">fido_cbor_info_maxmsgsiz</b>(<var class="Fa" title="Fa" style="white-space: nowrap;">const
  fido_cbor_info_t *ci</var>);
<h1 class="Sh" title="Sh" id="DESCRIPTION"><a class="selflink" href="#DESCRIPTION">DESCRIPTION</a></h1>
The <b class="Fn" title="Fn">fido_cbor_info_new</b>() function returns a pointer
  to a newly allocated, empty <var class="Vt" title="Vt">fido_cbor_info_t</var>
  type. If memory cannot be allocated, NULL is returned.
<div class="Pp"></div>
The <b class="Fn" title="Fn">fido_cbor_info_free</b>() function releases the
  memory backing <var class="Fa" title="Fa">*ci_p</var>, where
  <var class="Fa" title="Fa">*ci_p</var> must have been previously allocated by
  <b class="Fn" title="Fn">fido_cbor_info_new</b>(). On return,
  <var class="Fa" title="Fa">*ci_p</var> is set to NULL. Either
  <var class="Fa" title="Fa">ci_p</var> or
  <var class="Fa" title="Fa">*ci_p</var> may be NULL, in which case
  <b class="Fn" title="Fn">fido_cbor_info_free</b>() is a NOP.
<div class="Pp"></div>
The <b class="Fn" title="Fn">fido_dev_get_cbor_info</b>() function transmits a
  <code class="Dv" title="Dv">CTAP_CBOR_GETINFO</code> command to
  <var class="Fa" title="Fa">dev</var> and fills
  <var class="Fa" title="Fa">ci</var> with attributes retrieved from the
  command's response. The <b class="Fn" title="Fn">fido_dev_get_cbor_info</b>()
  function may block.
<div class="Pp"></div>
The <b class="Fn" title="Fn">fido_cbor_info_aaguid_ptr</b>(),
  <b class="Fn" title="Fn">fido_cbor_info_extensions_ptr</b>(),
  <b class="Fn" title="Fn">fido_cbor_info_protocols_ptr</b>(), and
  <b class="Fn" title="Fn">fido_cbor_info_versions_ptr</b>() functions return
  pointers to the AAGUID, supported extensions, PIN protocol and CTAP version
  strings of <var class="Fa" title="Fa">ci</var>. The corresponding length of a
  given attribute can be obtained by
  <b class="Fn" title="Fn">fido_cbor_info_aaguid_len</b>(),
  <b class="Fn" title="Fn">fido_cbor_info_extensions_len</b>(),
  <b class="Fn" title="Fn">fido_cbor_info_protocols_len</b>(), or
  <b class="Fn" title="Fn">fido_cbor_info_versions_len</b>().
<div class="Pp"></div>
The <b class="Fn" title="Fn">fido_cbor_info_options_name_ptr</b>() and
  <b class="Fn" title="Fn">fido_cbor_info_options_value_ptr</b>() functions
  return pointers to the array of option names and their respective values in
  <var class="Fa" title="Fa">ci</var>. The length of the options array is
  returned by <b class="Fn" title="Fn">fido_cbor_info_options_len</b>().
<div class="Pp"></div>
The <b class="Fn" title="Fn">fido_cbor_info_maxmsgsiz</b>() function returns the
  maximum message size of <var class="Fa" title="Fa">ci</var>.
<div class="Pp"></div>
A complete example of how to use these functions can be found in the
  <i class="Pa" title="Pa">example/info.c</i> file shipped with
  <i class="Em" title="Em">libfido2</i>.
<h1 class="Sh" title="Sh" id="RETURN_VALUES"><a class="selflink" href="#RETURN_VALUES">RETURN
  VALUES</a></h1>
The <b class="Fn" title="Fn">fido_cbor_info_aaguid_ptr</b>(),
  <b class="Fn" title="Fn">fido_cbor_info_extensions_ptr</b>(),
  <b class="Fn" title="Fn">fido_cbor_info_protocols_ptr</b>(),
  <b class="Fn" title="Fn">fido_cbor_info_versions_ptr</b>(),
  <b class="Fn" title="Fn">fido_cbor_info_options_name_ptr</b>(), and
  <b class="Fn" title="Fn">fido_cbor_info_options_value_ptr</b>() functions
  return NULL if the respective field in <var class="Fa" title="Fa">ci</var> is
  absent. If not NULL, returned pointers are guaranteed to exist until any API
  function that takes <var class="Fa" title="Fa">ci</var> without the
  <i class="Em" title="Em">const</i> qualifier is invoked.
<h1 class="Sh" title="Sh" id="SEE_ALSO"><a class="selflink" href="#SEE_ALSO">SEE
  ALSO</a></h1>
<a class="Xr" title="Xr" href="fido_dev_open.html">fido_dev_open(3)</a></div>
<table class="foot">
  <tr>
    <td class="foot-date">May 24, 2018</td>
    <td class="foot-os">Linux 4.16.11-1-ARCH</td>
  </tr>
</table>
